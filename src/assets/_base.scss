$root-avg-font-size: (($min-font-size + $max-font-size) * 0.5rem) / 16 ;
$root-min-font-size: ($min-font-size / 16) * 1rem ;
$root-max-font-size: ($max-font-size / 16) * 1rem ;

$min-width: 320px ;
$max-width: 1200px ;

$div: (($root-max-font-size - $root-min-font-size) * 1px) / (($max-width - $min-width) * 1rem) ;

$div: 16 * (($root-max-font-size - $root-min-font-size) * 1px) / (($max-width - $min-width) * 1rem) ;

@media screen {
    :root {
        font-size: $root-avg-font-size ;
    }

    :root {
        font-size: #{"calc(" $root-min-font-size " + " $div " * (100vw -" $min-width "))"};
    }

    @media (max-width: $min-width) {
        :root {
            font-size: $root-min-font-size ;
        }
    }
    @media (min-width: $max-width) {
        :root {
            font-size: $root-max-font-size ;
        }
    }
}


:root {
    line-height: $line ;
    font-size-adjust: $ex-height ;
}

:root {
    @include text-size-adjust(none);
}

h1,h2,h3,h4,h5,h6 {
    margin-block: 0 ;
    font-size: inherit ;
}

p {
    inline-size: $paragraph-width ;
    max-inline-size: 100% ;
}
figure {
    margin-inline: 0;
}
figcaption {
    font-weight: bold ;
}

pre, hr, figure, dl, p, dl {
    margin-block: 0 ;
}

main :is(h3,h4,h5,h6) {
    font-size: inherit ;
}

main h1 {
    font-size: scale(2) * 1rem ;
}
main h2 {
    font-size: scale(1) * 1rem ;
}

main :is(figure, header, dl, p) {
    margin-block: $line ;
}

hgroup {
    max-inline-size: 100% ;
}

hgroup p {
    margin-block: 0 ;
}

:root, main, body {
    padding: 0 ;
    margin: 0 ;
}

main :is(header, figcaption) {
    display: flex ;
    justify-content: space-between ;
    inline-size: $paragraph-width ;
    max-inline-size: 100% ;
}

@media screen {
    :root {
        display: flex ;
        justify-content: center ;
        padding-inline-end: 0.9ch ;
        padding-block-end: 3 * $line ;
    }

    body {
        box-sizing: border-box ;
        inline-size: fit-content ;
        max-inline-size: 100% ;
    }

    #side > * {
        margin-block: $line ;
    }

    main {
        box-sizing: border-box ;
        inline-size: $main-width ;
        max-inline-size: 100% ;
    }

    // FIXME provide better fallbacks for fluid layout
    body {
        padding-inline-start: #{"clamp(0rem, 100vw - (" $main-width "), 3rem)"} ;
    }

    :root {
        padding-inline-start: 0.9ch ;
        padding-inline-start: #{"clamp(0.9ch, 100vw - (" $main-width + 20ch "), 3rem)"} ;
    }

    :root {
        padding-block-start: #{"min(100vw - (" $main-width "), " $line ")"} ;
    }
}

main :is(menu, ul, ol) {
    padding-inline-start: #{"min((" $main-width + 12ch ") - 100vw, " 2rem ")"} ;
}

// FIXME use a different break point
@media only screen and (min-width: $A4-width + 2 * $A4-margin) {
    :root {
        justify-content: start ;
    }
}
