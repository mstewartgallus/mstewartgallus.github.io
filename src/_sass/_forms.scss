fieldset, label, button, input, select, option {
    margin: unset ;
    display: block ;
    border: unset ;
    font: inherit ;
}

input, button, select, option {
    appearance: none ;
}


input {
    background-color: var(--field);
    color: var(--field-text);
}

button {
    background-color: var(--button-face);
    color: var(--button-text);
    border-color: var(--button-border);
}

button:active {
    background-color: var(--button-text) ;
    color: var(--button-face) ;
}

option {
    background-color: var(--field);
    color: var(--field-text);
}
option:checked {
    background-color: var(--field-text);
    color: var(--field);
}

input[type="checkbox"] {
    border-color: var(--button-border) ;
    background-color: var(--button-face) ;
    color: var(--button-text) ;
}

input[type="checkbox"]:checked {
    background-color: var(--accent-color) ;
    color: var(--accent-color-text) ;
}

label, button, input, option {
    box-sizing: border-box ;
    block-size: $line ;
}

label, input, button {
    border-radius: 0.01ch ;
    border-width: 0.08em;
}
input[type="search"] {
    border-block-end-style: solid ;
}


button {
    border-style: solid ;
    padding-inline: 0.5em ;
}

fieldset {
    border-radius: 0.01ch ;

    border-inline-start-style: dashed ;
    border-width: 0.1em ;
    padding-inline-start: 1em;
    margin-block: $line ;

    display: flex;
    flex-direction: column ;
}

legend {
    font-weight: bold ;
}


button {
    align-self: start ;
}


select {
    overflow: auto ;
    box-sizing: border-box ;
    min-block-size: $line ;
    max-block-size: 4 * $line ;
}

option {
    padding-inline-start: 1em ;
}

option:checked {
    font-weight: bold ;
}


:is(button, select):focus-visible {
    outline-offset: 0;
    outline-width: 0.4em ;
}

button:focus-visible {
    outline-offset: 0;
    outline-width: 0.3em ;
}

select:focus-visible {
    outline-offset: 0;
    outline-width: 0.4em ;
}

input[type="search"] {
    inline-size: 20ch;
    max-inline-size: 100%;
}

input[type="checkbox"] {
    block-size: 1.4em ;
    inline-size: 2em ;

    border-radius: 0.1ch ;
    border-style: solid ;
    border-width: 0.1ch ;

    font-weight: bold ;

    display: flex ;
    justify-content: center ;
    align-items: center ;
    text-align: center ;
}


input[type="checkbox"]:checked {
    border: unset ;
}

// FIXME i18n
// FIXME use display list-item ?
input[type="checkbox"]::after {
    display: table-cell ;
    vertical-align: middle ;
    content: "" ;
}
input[type="checkbox"]:checked::after {
    content: "âœ“" ;
}


label {
    display: flex ;
    flex-wrap: wrap ;
    justify-content: space-between ;
    align-items: end ;
    column-gap: 1em ;
    width: fit-content ;
}

input {
    transition: background-color 0.2s, color 0.2s ;
}
input:checked {
    transition: background-color 0.1s, color 0.1s ;
}

button {
    transition: background-color 0.2s, color 0.2s ;
}
button:active {
    transition: background-color 0.1s, color 0.1s ;
}


.search-basic {
    display: block ;
    width: fit-content ;
}
.search-basic :is(label, input, button) {
    display: inline-block ;
}

// reduce cumulative layout shift
#search-output {
    display: block ;
    min-block-size: 5 * $line ;
}

#character, #category, #tag, #place {
    display: grid ;
    grid-template-columns: auto 1fr ;
    column-gap: 1em ;
    width: fit-content ;
}

#character, #tag {
    overflow: auto ;
    max-height: 20 * $line ;
}
