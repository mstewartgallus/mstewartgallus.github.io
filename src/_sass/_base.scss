$root-avg-font-size: ($min-font-size + $max-font-size) / 2 ;

@media screen {
    :root {
        font-size: $root-avg-font-size ;
        font-size:
            lerp($min-font-size, $max-font-size,
                 linstep($min-width, $max-width, 100vw));
    }
}


:root {
    line-height: $line ;
    font-size-adjust: $ex-height ;
}

:root {
    @include text-size-adjust(none);
}

h1,h2,h3,h4,h5,h6 {
    margin-block: 0 ;
    font-size: inherit ;
}

p {
    inline-size: $paragraph-width ;
    max-inline-size: 100% ;
}
figure {
    margin-inline: 0;
}
figcaption {
    font-weight: bold ;
}

pre, hr, figure, dl, p, dl {
    margin-block: 0 ;
}

main :is(h3,h4,h5,h6) {
    font-size: inherit ;
}

main h1 {
    font-size: scale(2) ;
}
main h2 {
    font-size: scale(1) ;
}

main :is(figure, header, p) {
    margin-block: $line ;
}

hgroup {
    max-inline-size: 100% ;
}

hgroup p {
    margin-block: 0 ;
}

:root, main, body {
    padding: 0 ;
    margin: 0 ;
}

main :is(header, figcaption) {
    display: flex ;
    inline-size: $paragraph-width ;
    max-inline-size: 100% ;
}
main :is(header, figcaption) > :first-child {
    flex-grow: 1 ;
}

@media screen {
    :root {
        display: flex ;
        justify-content: start ;
        padding-block-end: 3 * $line ;
    }

    body {
        box-sizing: border-box ;
        inline-size: fit-content ;
        max-inline-size: 100% ;
    }

    #sidebar > * {
        margin-block: $line ;
    }

    main {
        box-sizing: border-box ;
        inline-size: $main-width ;
        max-inline-size: 100% ;
    }

    // FIXME provide better fallbacks for fluid layout
    :root {
        padding-inline: 0.8rem ;
        padding-inline:
            lerp(0.8rem, 7rem,
                 linstep(400px * $remperpx, 1000px * $remperpx,
                         100vw));
    }

    :root {
        padding-block-start:
            lerp(0rem, $line,
                     linstep($min-width, 1200px * $remperpx,
                             100vw));
    }
}

@media screen {
    body {
        padding-inline-start:
            lerp(0rem, 2rem,
                 linstep(400px * $remperpx, 600px * $remperpx,
                         100vw));
    }
}

main :is(ul, ol) {
    padding-inline-start:
            lerp(0rem, 2rem,
                 #{"(1rem - " linstep(400px * $remperpx, 600px * $remperpx,
                                    100vw) ")"});
}

:is(h1,h2,h3,h4,h5,h6):target {
    filter: invert(100%) ;
}
:target figcaption {
    filter: invert(100%) ;
}
