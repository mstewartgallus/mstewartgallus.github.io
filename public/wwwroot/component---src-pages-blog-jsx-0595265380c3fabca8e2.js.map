{"version":3,"file":"component---src-pages-blog-jsx-0595265380c3fabca8e2.js","mappings":"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","sources":["webpack://words-to-kick-your-teeth-out/./src/features/ui/block-a/index.jsx","webpack://words-to-kick-your-teeth-out/./src/features/ui/block-a/a.module.css","webpack://words-to-kick-your-teeth-out/./src/features/ui/breadcrumb-list/index.jsx","webpack://words-to-kick-your-teeth-out/./src/features/ui/click-trap/click-trap.module.css","webpack://words-to-kick-your-teeth-out/./src/features/ui/click-trap/index.jsx","webpack://words-to-kick-your-teeth-out/./src/features/index/use-posts.js","webpack://words-to-kick-your-teeth-out/./src/features/index/use-post-list.js","webpack://words-to-kick-your-teeth-out/./src/features/index/post-list.jsx","webpack://words-to-kick-your-teeth-out/./src/pages/blog.jsx"],"sourcesContent":["import { withClass } from \"@features/util\";\nimport { A } from \"../a\";\nimport { a } from \"./a.module.css\";\n\nexport const BlockA = withClass(A, a);\n","// extracted by mini-css-extract-plugin\nexport var a = \"a-module--a--08064\";","import { BlockA } from \"../block-a\";\nimport { ClickTrap } from \"../click-trap\";\nimport { BreadcrumbItem } from \"./breadcrumb-item.jsx\";\n\nexport { BreadcrumbList } from \"./breadcrumb-list.jsx\";\nexport { BreadcrumbItem } from \"./breadcrumb-item.jsx\";\n\nexport const BreadcrumbA = props =>\n<BreadcrumbItem>\n    <BlockA {...props}>\n        {props.children}\n        <ClickTrap />\n    </BlockA>\n</BreadcrumbItem>;\n","// extracted by mini-css-extract-plugin\nexport var clickTrap = \"click-trap-module--clickTrap--9e175\";","import { clickTrap } from \"./click-trap.module.css\";\n\nexport const ClickTrap = () => <span className={clickTrap} aria-hidden=\"true\" />;\n","import { useMemo } from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\n\nconst usePostsRaw = () => useStaticQuery(graphql`\nquery UsePosts {\n  allLink(sort: {post: {date: DESC}}, filter: {category: {eq: \"\"}}) {\n    nodes {\n      post {\n        title\n        slug\n      }\n    }\n  }\n}`);\n\nexport const usePosts = () => {\n    const raw = usePostsRaw();\n    return useMemo(() => raw.allLink.nodes.map(p => p.post), [raw]);\n}\n","import { useMemo } from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\n\nconst usePostListRaw = () => useStaticQuery(graphql`\nquery UsePostList {\n  allLink(sort: {post: {date: DESC}}, filter: {category: {ne: \"\"}}) {\n    group(field: {category: SELECT}) {\n      category: fieldValue\n      nodes {\n        post {\n          title\n          slug\n        }\n      }\n    }\n  }\n}`);\n\nexport const usePostList = () => {\n    const raw = usePostListRaw();\n    return useMemo(() =>\n        Object.fromEntries(\n            raw.allLink.group\n                .map(({ category, nodes }) =>\n                    [category, nodes.map(l => l.post)])),\n        [raw]);\n}\n","import { BlockA, ClickTrap, Ol, Li } from \"@features/ui\";\n\nconst Entry = ({href, children}) =>\n<Li>\n    <BlockA href={href}>\n        {children}\n        <ClickTrap />\n    </BlockA>\n</Li>;\n\nconst Posts = ({posts}) => posts.map(({ slug, title }) =>\n    <Entry key={slug} href={slug}>{title}</Entry>\n);\n\nexport const PostList = ({posts}) =>\nposts && posts.length > 0 &&\n    <Ol reversed=\"reversed\" start={posts.length}>\n        <Posts posts={posts} />\n    </Ol>;\n","import { useId } from \"react\";\nimport { useLocation } from \"@gatsbyjs/reach-router\";\nimport {\n    PostList,\n    usePostList, usePosts\n} from \"@features/index\";\nimport {\n    A,\n    BreadcrumbList, BreadcrumbA, BreadcrumbItem,\n    Card,\n    H2A,\n    Hgroup,\n    Ul,\n    Li\n} from \"@features/ui\";\nimport { ViewportPage } from \"@features/page\";\nimport { SeoBasic } from \"../components/seo-basic.jsx\";\nimport { useTitle } from \"../components/title.jsx\";\nimport { useAbsolute } from \"../hooks/use-absolute.js\";\n\nconst title = \"Posts\";\n\nconst Seo = () => {\n    const { pathname } = useLocation();\n    const url = useAbsolute(pathname);\n    return <SeoBasic title={title} url={url} />;\n};\n\nexport const Head = () => {\n    const fulltitle = useTitle(title);\n    return <>\n               <title>{fulltitle}</title>\n               <Seo />\n           </>;\n};\n\nconst BlogPage = () => {\n    const posts = usePosts();\n    const postsByCategory = usePostList();\n    const navId = useId();\n    return <ViewportPage\n               breadcrumbs={\n                   <BreadcrumbList>\n                       <BreadcrumbA href=\"/\">Home</BreadcrumbA>\n                       <BreadcrumbItem>\n                           <span aria-current=\"page\">Blog</span>\n                       </BreadcrumbItem>\n                   </BreadcrumbList>\n               }\n               mainbar={\n                   Object.entries(postsByCategory).map(([category, p]) =>\n                       <nav key={category} aria-labelledby={category}>\n                           <Card>\n                               <header>\n                                   <Hgroup>\n                                       <H2A id={category}>\n                                           {category}\n                                       </H2A>\n                                   </Hgroup>\n                               </header>\n                               <PostList posts={p} />\n                           </Card>\n                       </nav>\n                   )\n               }\n\n               heading=\"Posts\"\n           >\n               <nav aria-labelledby={navId}>\n                   <span id={navId}>Categories</span>\n                   <Ul>\n                       {\n                           Object.keys(postsByCategory).map(category =>\n                               <Li key={category}>\n                                   <A href={`#` + category}>{category}</A>\n                               </Li>)\n                       }\n                   </Ul>\n               </nav>\n               <PostList posts={posts} />\n           </ViewportPage>;\n};\n\n\nexport default BlogPage;\n"],"names":["BlockA","withClass","A","BreadcrumbA","props","_jsx","BreadcrumbItem","children","_jsxs","ClickTrap","className","usePosts","raw","useStaticQuery","useMemo","allLink","nodes","map","p","post","usePostList","Object","fromEntries","group","_ref","category","l","Entry","href","Li","Posts","_ref2","posts","_ref3","slug","title","PostList","_ref4","length","Ol","reversed","start","Seo","pathname","useLocation","url","useAbsolute","SeoBasic","Head","fulltitle","useTitle","_Fragment","BlogPage","postsByCategory","navId","useId","ViewportPage","breadcrumbs","BreadcrumbList","mainbar","entries","Card","Hgroup","H2A","id","heading","Ul","keys"],"sourceRoot":""}