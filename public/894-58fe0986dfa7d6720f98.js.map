{"version":3,"file":"894-58fe0986dfa7d6720f98.js","mappings":"yNASA,IAAIA,EACJ,MAAMC,EAAgBA,UACFC,IAAZF,IACAA,EATkB,oBAAXG,SAGkC,IAAtCC,SAASC,cAAc,KAAKC,OAQ5BN,GAGLO,GAAqBC,EAAAA,EAAAA,OAAK,IAAM,wDAChCC,GAAkBD,EAAAA,EAAAA,OAAK,IAAM,wDAKtBE,EAAaC,IACtB,MAAMC,EAAOX,IAAkBM,EAAqBE,EACpD,OAAOI,EAAAA,EAAAA,KAACD,EAAI,IAAKD,GAAS,EAG9B,W","sources":["webpack://words-to-kick-your-teeth-out/./src/features/ui/pane-client/index.jsx"],"sourcesContent":["import { lazy } from \"react\";\n\nconst query = () => {\n    if (typeof window === 'undefined') {\n        return false;\n    }\n    return document.createElement('p').inert === false;\n};\n\nlet support = undefined;\nconst supportsInert = () => {\n    if (support === undefined) {\n        support = query();\n    }\n    return support;\n};\n\nconst PaneClientNoninert = lazy(() => import(\"./pane-client.jsx\"));\nconst PaneClientInert = lazy(() => import(\"./pane-client-inert.jsx\"));\n\n// FIXME this is kind of silly but a better structure would really\n// only be possible with top level await\n\nexport const PaneClient = props => {\n    const Pane = supportsInert() ? PaneClientNoninert : PaneClientInert;\n    return <Pane {...props} />;\n};\n\nexport default PaneClient;\n"],"names":["support","supportsInert","undefined","window","document","createElement","inert","PaneClientNoninert","lazy","PaneClientInert","PaneClient","props","Pane","_jsx"],"sourceRoot":""}