{"version":3,"file":"498-ca9fae8032dc5c9f1d7f.js","mappings":"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","sources":["webpack://words-to-kick-your-teeth-out/./src/features/ui/a-local/use-intersect.js","webpack://words-to-kick-your-teeth-out/./src/features/ui/a-local/index.jsx"],"sourcesContent":["const callbacks = new Map();\n\nconst onObserve = entry => {\n    const { target, isIntersecting, intersectionRatio } = entry;\n\n    const near = isIntersecting || intersectionRatio > 0;\n    callbacks.get(target)(near);\n};\n\nconst observer = entries => {\n    for (const entry of entries) {\n        onObserve(entry);\n    }\n};\n\nlet prefetcher = null;\nconst getPrefetcher = () => {\n    if (prefetcher) {\n        return prefetcher;\n    }\n    if (!window) {\n        return null;\n    }\n\n    const { IntersectionObserver } = window;\n    if (!IntersectionObserver) {\n        return null;\n    }\n\n    prefetcher = new IntersectionObserver(observer);\n    return prefetcher;\n};\n\nexport const observe = (elem, cb, { signal }) => {\n    const pre = getPrefetcher();\n    if (!pre) {\n        return;\n    }\n\n    let ignore = false;\n    const callback = near => {\n        if (ignore) {\n            return;\n        }\n        cb(near);\n    };\n\n    signal.addEventListener('abort', () => {\n        ignore = true;\n        pre.unobserve(elem);\n        callbacks.delete(elem);\n    }, { passive: true });\n\n    callbacks.set(elem, callback);\n    pre.observe(elem);\n};\n","import {\n    forwardRef,\n    useRef,\n    useCallback,\n    useEffect, useReducer, useTransition\n} from \"react\";\nimport { prefetchPathname, navigate } from \"gatsby\";\nimport { observe } from \"./use-intersect\";\n\nconst initState = {\n    mouseover: false,\n    focus: false,\n    near: false\n};\n\nconst reducer = (state, action) => {\n    switch (action) {\n    case 'near':\n        return { ...state, near: true };\n    case 'far':\n        return { ...state, near: false };\n\n    case 'mouseover':\n        return { ...state, mouseover: true };\n    case 'mouseout':\n        return { ...state, mouseover: false };\n\n    case 'focus':\n        return { ...state, focus: true };\n    case 'blur':\n        return { ...state, focus: false };\n\n    default: return state;\n    }\n};\n\nconst useHover = url => useEffect(() => {\n    if (!url) {\n        return;\n    }\n    window.___loader.hovering(url);\n}, [url]);\n\nconst usePrefetchPathname = url => useEffect(() => {\n    if (!url) {\n        return;\n    }\n    const abort = prefetchPathname(url);\n    return () => abort.abort();\n}, [url]);\n\nconst AClient = (props, ref) => {\n    const {\n        onClick,\n        onFocus, onBlur,\n        onMouseOver, onMouseOut\n    } = props;\n    const prefetchRef = useRef();\n\n    const { href } = props;\n\n    // Do this sort of silliness to integrate with React's native\n    // scheduling as much as possible and appropriately idle and not\n    // block threads.\n\n    const [, startTransition] = useTransition();\n    const [{ mouseover, focus, near }, dispatch] = useReducer(reducer, initState);\n\n    const onClickWrapper = useCallback(async e => {\n        onClick?.(e);\n        if (e.defaultPrevented) {\n            return;\n        }\n\n        e.preventDefault();\n        await navigate(href);\n    }, [onClick, href]);\n\n    const onMouseOverWrapper = useCallback(e => {\n        startTransition(() => dispatch('mouseover'));\n        onMouseOver?.(e);\n    }, [onMouseOver]);\n    const onMouseOutWrapper = useCallback(e => {\n        startTransition(() => dispatch('mouseout'));\n        onMouseOut?.(e);\n    }, [onMouseOut]);\n\n    const onFocusWrapper = useCallback(e => {\n        startTransition(() => dispatch('focus'));\n        onMouseOver?.(e);\n    }, [onMouseOver]);\n    const onBlurWrapper = useCallback(e => {\n        startTransition(() => dispatch('blur'));\n        onMouseOut?.(e);\n    }, [onMouseOut]);\n\n    useEffect(() => {\n        const { current } = prefetchRef;\n        if (!current) {\n            return;\n        }\n\n        const abort = new AbortController();\n        const { signal } = abort;\n        observe(current, near => {\n            if (near) {\n                startTransition(() => dispatch('near'));\n            } else {\n                startTransition(() => dispatch('far'));\n            }\n        }, { signal });\n        return () => abort.abort();\n    }, []);\n\n    const hover = mouseover || focus;\n    useHover(hover ? href : null);\n    usePrefetchPathname((near || hover) ? href : null);\n\n    return <a\n               {...props}\n               onClick={onClickWrapper}\n               onMouseOver={onMouseOverWrapper}\n               onMouseOut={onMouseOutWrapper}\n               onFocus={onFocusWrapper}\n               onBlur={onBlurWrapper}\n               ref={elem => {\n                   prefetchRef.current = elem;\n                   if (ref) {\n                       ref.current = elem;\n                   }\n               }}\n           />;\n};\n\nconst ARef = forwardRef(AClient);\n\nexport { ARef as AClient, ARef as default };\n"],"names":["callbacks","Map","onObserve","entry","target","isIntersecting","intersectionRatio","near","get","observer","entries","prefetcher","observe","elem","cb","_ref","signal","pre","getPrefetcher","window","IntersectionObserver","ignore","addEventListener","unobserve","delete","passive","set","initState","mouseover","focus","reducer","state","action","AClient","props","ref","onClick","onFocus","onBlur","onMouseOver","onMouseOut","prefetchRef","useRef","href","startTransition","useTransition","dispatch","useReducer","onClickWrapper","useCallback","async","e","defaultPrevented","preventDefault","navigate","onMouseOverWrapper","onMouseOutWrapper","onFocusWrapper","onBlurWrapper","useEffect","current","abort","AbortController","hover","url","___loader","hovering","prefetchPathname","usePrefetchPathname","_jsx","ARef","forwardRef"],"sourceRoot":""}