{"version":3,"file":"896-2bf1b687cc28b8e5c972.js","mappings":"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","sources":["webpack://words-to-kick-your-teeth-out/./src/features/util/use-click.js","webpack://words-to-kick-your-teeth-out/./src/features/ui/a-client/use-prefetch.js","webpack://words-to-kick-your-teeth-out/./src/features/ui/a-client/index.jsx","webpack://words-to-kick-your-teeth-out/./src/features/ui/a-client/use-hover.js"],"sourcesContent":["import { useCallback } from \"react\";\nimport { navigate } from \"gatsby\";\n\nconst bubble = e => {\n    while (e && (e.tagName !== 'A' || !e.href)) {\n        e = e.parentElement;\n    }\n    return e;\n};\n\nexport const useClick = () => {\n    return useCallback(async e => {\n        // FIXME check if not my url\n        const { target, altKey, metaKey, shiftKey, ctrlKey, button } = e;\n        if (button !== 0) {\n            return;\n        }\n\n        if (altKey || metaKey || shiftKey || ctrlKey) {\n            return;\n        }\n\n        e.preventDefault();\n\n        const { href } = bubble(target);\n        const { pathname, search } = new URL(href, window.location);\n\n        const url = pathname + search;\n\n        await navigate(url);\n    }, []);\n};\n","import { useRef, useEffect } from \"react\";\nimport { prefetchPathname } from \"gatsby\";\n\nconst aborts = new WeakMap();\nconst urls = new WeakMap();\n\nconst prefetch = elem => {\n    const url = urls.get(elem);\n    aborts.set(elem, prefetchPathname(url));\n};\n\nconst abort = elem => {\n    aborts.get(elem)?.abort();\n    aborts.delete(elem);\n};\n\nconst onObserve = entry => {\n    const { target, isIntersecting, intersectionRatio } = entry;\n\n    const near = isIntersecting || intersectionRatio > 0;\n    if (near) {\n        prefetch(target);\n    } else {\n        abort(target);\n    }\n};\n\nlet prefetcher = null;\nconst getPrefetcher = () => {\n    if (prefetcher) {\n        return prefetcher;\n    }\n    if (!window) {\n        return null;\n    }\n\n    const { IntersectionObserver } = window;\n    if (!IntersectionObserver) {\n        return null;\n    }\n\n    prefetcher = new IntersectionObserver(entries => {\n        for (const entry of entries) {\n            onObserve(entry);\n        }\n    });\n    return prefetcher;\n};\n\nconst addPrefetch = (elem, url, { signal }) => {\n    const pre = getPrefetcher();\n    if (!pre) {\n        return;\n    }\n\n    signal.addEventListener('abort', () => {\n        pre.unobserve(elem);\n        urls.delete(elem);\n    }, { passive: true });\n    urls.set(elem, url);\n    pre.observe(elem);\n};\n\n// FIXME move wrapper elsewhere\nexport const usePrefetch = url => {\n    const ref = useRef();\n    useEffect(() => {\n        const { current } = ref;\n        if (!current) {\n            return;\n        }\n\n        const abort = new AbortController();\n        const { signal } = abort;\n        addPrefetch(current, url, { signal });\n        return () => abort.abort();\n    }, [url]);\n    return ref;\n};\n","import { forwardRef } from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport { useClick } from \"@features/util\";\nimport { usePrefetch } from \"./use-prefetch\";\nimport { useHover } from \"./use-hover\";\n\nconst useSiteMetadataRaw = () => useStaticQuery(graphql`\nquery {\n  site {\n    siteMetadata {\n      siteUrl\n    }\n  }\n}`);\n\nconst AClient = ({children, ...props}, ref) => {\n    const metadata = useSiteMetadataRaw();\n\n    const siteUrl = metadata.site.siteMetadata.siteUrl;\n\n    const { origin, pathname, search, hash } = new URL(props.href ?? '', siteUrl);\n    const fail = !props.href || hash || origin !== siteUrl || props.target || props.download;\n    const url = pathname + search;\n\n    const prefetchRef = usePrefetch(url);\n    const hoverRef = useHover(url);\n\n    const onClick = useClick();\n\n    return <a onClick={fail ? null : onClick}\n              {...props}\n              ref={elem => {\n                  hoverRef.current = fail ? null : elem;\n                  prefetchRef.current = fail ? null : elem;\n\n                  if (ref) {\n                      ref.current = elem;\n                  }\n              }}>{children}</a>;\n};\n\nconst ARef = forwardRef(AClient);\n\nexport { ARef as AClient, ARef as default };\n","import { useRef, useEffect } from \"react\";\n\nexport const useHover = url => {\n    const ref = useRef();\n    useEffect(() => {\n        const { current } = ref;\n        if (!current) {\n            return;\n        }\n\n        // FIXME shouldn't bypass stuff\n        const abort = new AbortController();\n        const { signal } = abort;\n        current.addEventListener('mouseenter',\n                                 () => window.___loader.hovering(url),\n                                 { passive: true, signal });\n        return () => abort.abort();\n    }, [url]);\n    return ref;\n};\n"],"names":["aborts","WeakMap","urls","onObserve","entry","target","isIntersecting","intersectionRatio","elem","_aborts$get","url","get","set","prefetchPathname","prefetch","abort","delete","prefetcher","addPrefetch","_ref","signal","pre","getPrefetcher","window","IntersectionObserver","entries","addEventListener","unobserve","passive","observe","AClient","ref","_props$href","children","props","siteUrl","useStaticQuery","site","siteMetadata","origin","pathname","search","hash","URL","href","fail","download","prefetchRef","useRef","useEffect","current","AbortController","usePrefetch","hoverRef","___loader","hovering","useHover","onClick","useCallback","async","altKey","metaKey","shiftKey","ctrlKey","button","e","preventDefault","tagName","parentElement","bubble","location","navigate","_jsx","ARef","forwardRef"],"sourceRoot":""}