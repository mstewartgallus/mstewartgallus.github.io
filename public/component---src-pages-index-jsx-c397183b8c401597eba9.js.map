{"version":3,"file":"component---src-pages-index-jsx-c397183b8c401597eba9.js","mappings":"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","sources":["webpack://words-to-kick-your-teeth-out/./node_modules/core-js/internals/add-to-unscopables.js","webpack://words-to-kick-your-teeth-out/./node_modules/core-js/modules/es.array.unscopables.flat-map.js","webpack://words-to-kick-your-teeth-out/./src/components/json-ld.jsx","webpack://words-to-kick-your-teeth-out/./src/hooks/use-opengraph.js","webpack://words-to-kick-your-teeth-out/./src/components/seo-basic.jsx","webpack://words-to-kick-your-teeth-out/./src/hooks/use-absolute.js","webpack://words-to-kick-your-teeth-out/./src/hooks/use-index-all.js","webpack://words-to-kick-your-teeth-out/./src/hooks/use-submit.js","webpack://words-to-kick-your-teeth-out/./src/components/banner.jsx","webpack://words-to-kick-your-teeth-out/./src/components/header.jsx","webpack://words-to-kick-your-teeth-out/./src/components/post-list.jsx","webpack://words-to-kick-your-teeth-out/./src/components/search.jsx","webpack://words-to-kick-your-teeth-out/./src/components/search.module.css","webpack://words-to-kick-your-teeth-out/./src/hooks/use-index-category.js","webpack://words-to-kick-your-teeth-out/./src/hooks/use-post-list.js","webpack://words-to-kick-your-teeth-out/./src/hooks/use-website.js","webpack://words-to-kick-your-teeth-out/./src/pages/index.jsx","webpack://words-to-kick-your-teeth-out/./src/utils/flatten.js"],"sourcesContent":["var wellKnownSymbol = require('../internals/well-known-symbol');\nvar create = require('../internals/object-create');\nvar defineProperty = require('../internals/object-define-property').f;\n\nvar UNSCOPABLES = wellKnownSymbol('unscopables');\nvar ArrayPrototype = Array.prototype;\n\n// Array.prototype[@@unscopables]\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\nif (ArrayPrototype[UNSCOPABLES] == undefined) {\n  defineProperty(ArrayPrototype, UNSCOPABLES, {\n    configurable: true,\n    value: create(null)\n  });\n}\n\n// add a key to Array.prototype[@@unscopables]\nmodule.exports = function (key) {\n  ArrayPrototype[UNSCOPABLES][key] = true;\n};\n","// this method was added to unscopables after implementation\n// in popular engines, so it's moved to a separate module\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('flatMap');\n","import * as React from \"react\";\nimport { Script } from \"gatsby\";\n\nexport const JsonLd = ({srcdoc}) => {\n    const json = JSON.stringify(srcdoc);\n    return <Script type=\"application/ld+json\">{json}</Script>;\n};\n\nexport default JsonLd;\n","import * as React from 'react';\nimport useSiteMetadata from './use-site-metadata.js';\nimport favicon from '../images/favicon.svg';\n\nexport const useOpenGraph = ({description, url, title}) => {\n    const site = useSiteMetadata();\n    return React.useMemo(() => {\n        return {\n            og: {\n                site_name: site.title,\n                title,\n                image: favicon,\n                description: description ?? site.description,\n                url\n            }\n        };\n    }, [site, description, url, title]);\n};\n\nexport default useOpenGraph;\n","import * as React from \"react\";\nimport flatten from \"../utils/flatten.js\";\nimport useSiteMetadata from '../hooks/use-site-metadata.js';\nimport useOpenGraph from '../hooks/use-opengraph.js';\n\nconst Open = props => {\n    const json = useOpenGraph(props);\n    return flatten(json).map(([k, v]) =>\n        <meta key={k} property={k} content={v} />);\n};\n\nexport const SeoBasic = props => {\n    const {description, url} = props;\n    const site = useSiteMetadata();\n    return <>\n               {url && <link rel=\"canonical\" href={url} /> }\n               <meta name=\"description\" content={description ?? site.description} />\n               <Open {...props} />\n           </>;\n};\n\nexport default SeoBasic;\n","import { graphql, useStaticQuery } from \"gatsby\";\nimport * as React from \"react\";\n\nconst useMetadata = () => useStaticQuery(graphql`\nquery {\n  site {\n    siteMetadata {\n      siteUrl\n    }\n  }\n}`);\n\nexport const useAbsolute = pathname => {\n    const raw = useMetadata();\n    return React.useMemo(() => {\n        const site = raw.site.siteMetadata;\n        return new URL(pathname, site.siteUrl).toString();\n    }, [raw, pathname]);\n};\n\nexport default useAbsolute;\n","import { graphql, useStaticQuery } from \"gatsby\";\n\nconst useIndexAllRaw = () => useStaticQuery(graphql`\nquery UseIndexAll {\n  indexAll {\n    index {\n      id\n    }\n  }\n}`);\n\nexport const useIndexAll = () => useIndexAllRaw().indexAll.index.id;\n\nexport default useIndexAll;\n","import * as React from \"react\";\nimport { navigate } from \"gatsby\";\n\nexport const useSubmit = () => {\n    return React.useCallback(async event => {\n        const nativeEvent = event.nativeEvent;\n        const form = event.target;\n        const submitter = nativeEvent.submitter;\n\n        let action = submitter.getAttribute('formaction');\n        let enctype = submitter.getAttribute('formenctype');\n        let method = submitter.getAttribute('formmethod');\n        let target = submitter.getAttribute('formtarget');\n\n        action ??= form.getAttribute('action');\n        enctype ??= form.getAttribute('enctype');\n        method ??= form.method;\n        target ??= form.getAttribute('target');\n\n        if (enctype !== null) {\n            return;\n        }\n        if (method !== 'get') {\n            return;\n        }\n        if (target !== null) {\n            return;\n        }\n\n        event.preventDefault();\n\n        const search = new URLSearchParams(new FormData(form));\n\n        const url = `${action}?${search}`;\n\n        // FIXME what if external url ?\n        await navigate(url);\n    }, []);\n};\n\nexport default useSubmit;\n","import * as React from \"react\";\nimport { Link } from \"gatsby\";\n\nexport const Banner = props =>\n<ul {...props}>\n    <li><a type=\"application/atom+xml\" rel=\"alternate\" href=\"/feed.xml\">Subscribe</a></li>\n    <li><Link rel=\"author\" to=\"/about\">About the Author</Link></li>\n</ul>;\n\nexport default Banner;\n","import * as React from \"react\";\n\nexport const Header = ({ children, heading, ...props }) => {\n    const id = React.useId();\n    return <header {...props} aria-describedby={id}>\n               <hgroup id={id}>\n                   {heading}\n               </hgroup>\n               {children}\n           </header>;\n};\n\nexport default Header;\n","import * as React from \"react\";\nimport { Link } from \"gatsby\";\n\nconst Posts = ({posts}) =>\n      posts.map(({ slug, title }) =>\n          <li key={slug}>\n              <Link to={slug}>{title}</Link>\n          </li>);\n\nexport const PostList = ({posts}) =>\nposts && posts.length > 0 &&\n    <ol reversed>\n        <Posts posts={posts} />\n    </ol>;\n\nexport default PostList;\n","import * as React from \"react\";\nimport { useSubmit } from \"../hooks/use-submit.js\";\nimport { search, query } from \"./search.module.css\";\n\nexport const Search = () => {\n    const id = React.useId();\n    const onSubmit = useSubmit();\n\n    const titleId = `${id}-title`;\n    const inputId = `${id}-input`;\n\n    return <form className={search} aria-describedby={titleId}\n                 role=\"search\" rel=\"search\" action=\"/search\"\n                 onSubmit={onSubmit}>\n               <header className=\"sr-only\">\n                   <hgroup>\n                       <h2 id={titleId}>Search</h2>\n                   </hgroup>\n               </header>\n\n               <div className={query}>\n                   <label htmlFor={inputId}>Query</label>\n                   <input id={inputId} name=\"s\" type=\"search\" required />\n                   <button type=\"submit\">Search</button>\n               </div>\n           </form>;\n};\n\nexport default Search;\n","// extracted by mini-css-extract-plugin\nexport var query = \"search-module--query--42c00\";\nexport var search = \"search-module--search--ed73a\";","import { graphql, useStaticQuery } from \"gatsby\";\nimport * as React from \"react\";\n\nconst useIndexCategoryRaw = () => useStaticQuery(graphql`\nquery UseIndexCategory {\n  allIndexCategory(sort: {category: DESC}) {\n    nodes {\n      index {\n        id\n      }\n      category\n    }\n  }\n}`);\n\nexport const useIndexCategory = () => {\n    const raw = useIndexCategoryRaw();\n    return React.useMemo(() => {\n        const indices = raw.allIndexCategory.nodes;\n        return Object.fromEntries(indices.map(({index: { id }, category}) => [category, id]))\n    }, [raw]);\n};\n\nexport default useIndexCategory;\n","import { graphql, useStaticQuery } from \"gatsby\";\nimport * as React from \"react\";\n\nconst usePostListRaw = () => useStaticQuery(graphql`\nquery UsePostList {\n  allLink(sort: {post: {date: DESC}}) {\n    group(field: {index: {id: SELECT}}) {\n      index: fieldValue\n      nodes {\n        post {\n          title\n          slug\n        }\n      }\n    }\n  }\n}`);\n\nexport const usePostList = () => {\n    const raw = usePostListRaw();\n    return React.useMemo(() =>\n        Object.fromEntries(\n            raw.allLink.group\n                .map(({ index, nodes }) =>\n                    [index, nodes.map(l => l.post)])),\n        [raw]);\n}\n\nexport default usePostList;\n","import * as React from \"react\";\nimport useAbsolute from \"../hooks/use-absolute.js\";\nimport useSiteMetadata from \"../hooks/use-site-metadata.js\";\n\nexport const useWebsite = () => {\n    const site = useSiteMetadata();\n    const search = useAbsolute('/search');\n    const index = useAbsolute('/');\n    return React.useMemo(() => ({\n        \"@context\": \"https://schema.org\",\n        \"@type\": \"WebSite\",\n        \"name\": site.title,\n        \"description\": site.description,\n        \"url\": index,\n        \"potentialAction\": {\n            \"@type\": \"SearchAction\",\n            \"target\": {\n                \"@type\": \"EntryPoint\",\n                \"urlTemplate\": `${search}?s={s}`\n            },\n            \"query-input\": \"required name=s\"\n        }\n    }), [site, search, index]);\n};\n\nexport default useWebsite;\n","import * as React from \"react\";\nimport Banner from \"../components/banner.jsx\";\nimport BreadcrumbList from \"../components/breadcrumb-list.jsx\";\nimport HeadBasic from \"../components/head-basic.jsx\";\nimport Header from \"../components/header.jsx\";\nimport JsonLd from \"../components/json-ld.jsx\";\nimport Nav from \"../components/nav.jsx\";\nimport Post from \"../components/post.jsx\";\nimport PostList from \"../components/post-list.jsx\";\nimport Search from \"../components/search.jsx\";\nimport SeoBasic from \"../components/seo-basic.jsx\";\nimport Title from \"../components/title.jsx\";\nimport useAbsolute from \"../hooks/use-absolute.js\";\nimport useIndexAll from \"../hooks/use-index-all.js\";\nimport useIndexCategory from \"../hooks/use-index-category.js\";\nimport usePostList from \"../hooks/use-post-list.js\";\nimport useSiteMetadata from \"../hooks/use-site-metadata.js\";\nimport useWebsite from \"../hooks/use-website.js\";\n\nconst title = \"Table of Contents\";\n\nexport const Head = ({location: {pathname}}) => {\n    const url = useAbsolute(pathname);\n    return <>\n               <HeadBasic />\n               <Title>{title}</Title>\n               <link type=\"application/atom+xml\" rel=\"alternate\" href=\"/feed.xml\" />\n               <SeoBasic title={title} url={url} />\n           </>;\n};\n\nconst IndexPage = props => {\n    const { title, description } = useSiteMetadata();\n\n    const json = useWebsite();\n    const indices = usePostList();\n    const indexAll = useIndexAll();\n    const indexCategory = useIndexCategory();\n    const allPosts = indices[indexAll];\n    const postsByCategory =\n          Object.entries(indexCategory)\n          .map(([category, id]) => [category, indices[id]]);\n\n    return <>\n               <Post heading={<h1>Posts</h1>}\n                     sidebar={\n                         <>\n                             <Header\n                                 heading={\n                                     <>\n                                         <h2>{title}</h2>\n                                         <p>{description}</p>\n                                     </>}>\n                                 <Banner />\n                             </Header>\n                             <Search />\n                             <Nav heading={<h2>Breadcrumbs</h2>}>\n                                 <BreadcrumbList>\n                                     <li aria-current=\"page\">Home</li>\n                                 </BreadcrumbList>\n                             </Nav>\n                         </>\n                     }>\n                   <PostList posts={allPosts} />\n\n                   {\n                       postsByCategory.map(([category, posts]) =>\n                           <React.Fragment key={category}>\n                               <h2>{category}</h2>\n                               <PostList posts={posts} />\n                           </React.Fragment>)\n                   }\n               </Post>\n               <JsonLd srcdoc={json} />\n    </>;\n};\n\nexport default IndexPage;\n","function loop(key, value) {\n    if (typeof value === 'string') {\n        return [[key, value]];\n    }\n\n    if (Array.isArray(value)) {\n        return value.flatMap(x => loop(key, x));\n    }\n\n    return Object.entries(value)\n        .flatMap(([k, v]) => {\n            const prop = key ? `${key}:${k}` : k ;\n            return loop(prop, v);\n        });\n}\n\nexport const flatten = value => loop(null, value);\n\nexport default flatten;\n"],"names":["wellKnownSymbol","create","defineProperty","UNSCOPABLES","ArrayPrototype","Array","prototype","undefined","configurable","value","module","exports","key","addToUnscopables","srcdoc","json","JSON","stringify","type","description","url","title","site","useSiteMetadata","React","og","site_name","image","favicon","Open","props","useOpenGraph","flatten","map","k","v","property","content","rel","href","name","useAbsolute","pathname","raw","useStaticQuery","siteMetadata","URL","siteUrl","toString","indexAll","index","id","useSubmit","async","nativeEvent","event","form","target","submitter","action","getAttribute","enctype","method","preventDefault","URLSearchParams","FormData","navigate","to","children","heading","Posts","posts","slug","length","reversed","onSubmit","titleId","inputId","className","role","htmlFor","required","indices","allIndexCategory","nodes","Object","fromEntries","category","allLink","group","l","post","search","Head","location","useWebsite","usePostList","useIndexAll","indexCategory","useIndexCategory","allPosts","postsByCategory","entries","sidebar","loop","isArray","flatMap","x"],"sourceRoot":""}