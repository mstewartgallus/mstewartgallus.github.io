{"version":3,"file":"component---src-pages-index-jsx-1a2e14a1a4d4487b7f51.js","mappings":"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","sources":["webpack://words-to-kick-your-teeth-out/./src/components/a.jsx","webpack://words-to-kick-your-teeth-out/./src/components/json-ld.jsx","webpack://words-to-kick-your-teeth-out/./src/hooks/use-index-all.js","webpack://words-to-kick-your-teeth-out/./src/hooks/use-submit.js","webpack://words-to-kick-your-teeth-out/./src/components/banner.jsx","webpack://words-to-kick-your-teeth-out/./src/components/header.jsx","webpack://words-to-kick-your-teeth-out/./src/components/post-list.jsx","webpack://words-to-kick-your-teeth-out/./src/components/search.jsx","webpack://words-to-kick-your-teeth-out/./src/components/search.module.css","webpack://words-to-kick-your-teeth-out/./src/hooks/use-index-category.js","webpack://words-to-kick-your-teeth-out/./src/hooks/use-post-list.js","webpack://words-to-kick-your-teeth-out/./src/hooks/use-website.js","webpack://words-to-kick-your-teeth-out/./src/pages/index.jsx"],"sourcesContent":["import * as React from \"react\";\nimport * as Gatsby from \"gatsby\";\n\nconst internal = href => href.startsWith(\"/\");\n\nconst linkish = ({href, download, target}) =>\n      internal(href) && !download && !target;\n\nexport const A = ({ children, ...props }) =>\n      linkish(props) ?\n    <Gatsby.Link {...props} to={props.href}>{children}</Gatsby.Link> :\n<a {...props}>{children}</a> ;\n\nexport default A;\n","import * as React from \"react\";\nimport { Script } from \"gatsby\";\n\nexport const JsonLd = ({srcdoc}) => {\n    const json = JSON.stringify(srcdoc);\n    return <Script type=\"application/ld+json\">{json}</Script>;\n};\n\nexport default JsonLd;\n","import { graphql, useStaticQuery } from \"gatsby\";\n\nconst useIndexAllRaw = () => useStaticQuery(graphql`\nquery UseIndexAll {\n  indexAll {\n    index {\n      id\n    }\n  }\n}`);\n\nexport const useIndexAll = () => useIndexAllRaw().indexAll.index.id;\n\nexport default useIndexAll;\n","import * as React from \"react\";\nimport { navigate } from \"gatsby\";\n\nexport const useSubmit = () => {\n    return React.useCallback(async event => {\n        const nativeEvent = event.nativeEvent;\n        const form = event.target;\n        const submitter = nativeEvent.submitter;\n\n        let action = submitter.getAttribute('formaction');\n        let enctype = submitter.getAttribute('formenctype');\n        let method = submitter.getAttribute('formmethod');\n        let target = submitter.getAttribute('formtarget');\n\n        action ??= form.getAttribute('action');\n        enctype ??= form.getAttribute('enctype');\n        method ??= form.method;\n        target ??= form.getAttribute('target');\n\n        if (enctype !== null) {\n            return;\n        }\n        if (method !== 'get') {\n            return;\n        }\n        if (target !== null) {\n            return;\n        }\n\n        event.preventDefault();\n\n        const search = new URLSearchParams(new FormData(form));\n\n        const url = `${action}?${search}`;\n\n        // FIXME what if external url ?\n        await navigate(url);\n    }, []);\n};\n\nexport default useSubmit;\n","import * as React from \"react\";\nimport { Link } from \"gatsby\";\n\nexport const Banner = props =>\n<ul {...props}>\n    <li><a type=\"application/atom+xml\" rel=\"alternate\" href=\"/feed.xml\">Subscribe</a></li>\n    <li><Link rel=\"author\" to=\"/about\">About the Author</Link></li>\n</ul>;\n\nexport default Banner;\n","import * as React from \"react\";\n\nexport const Header = ({ children, heading, ...props }) => {\n    const id = React.useId();\n    return <header {...props} aria-describedby={id}>\n               <hgroup id={id}>\n                   {heading}\n               </hgroup>\n               {children}\n           </header>;\n};\n\nexport default Header;\n","import * as React from \"react\";\nimport A from \"./a.jsx\";\n\nconst Posts = ({posts}) =>\n      posts.map(({ slug, title }) =>\n          <li key={slug}>\n              <A href={slug}>{title}</A>\n          </li>);\n\nexport const PostList = ({posts}) =>\nposts && posts.length > 0 &&\n    <ol reversed>\n        <Posts posts={posts} />\n    </ol>;\n\nexport default PostList;\n","import * as React from \"react\";\nimport { useSubmit } from \"../hooks/use-submit.js\";\nimport { search, query } from \"./search.module.css\";\n\nexport const Search = () => {\n    const id = React.useId();\n    const onSubmit = useSubmit();\n\n    const titleId = `${id}-title`;\n    const inputId = `${id}-input`;\n\n    return <form className={search} aria-describedby={titleId}\n                 role=\"search\" rel=\"search\" action=\"/search\"\n                 onSubmit={onSubmit}>\n               <header className=\"sr-only\">\n                   <hgroup>\n                       <h2 id={titleId}>Search</h2>\n                   </hgroup>\n               </header>\n\n               <div className={query}>\n                   <label htmlFor={inputId}>Query</label>\n                   <input id={inputId} name=\"s\" type=\"search\" required />\n                   <button type=\"submit\">Search</button>\n               </div>\n           </form>;\n};\n\nexport default Search;\n","// extracted by mini-css-extract-plugin\nexport var query = \"search-module--query--42c00\";\nexport var search = \"search-module--search--ed73a\";","import { graphql, useStaticQuery } from \"gatsby\";\nimport * as React from \"react\";\n\nconst useIndexCategoryRaw = () => useStaticQuery(graphql`\nquery UseIndexCategory {\n  allIndexCategory(sort: {category: DESC}) {\n    nodes {\n      index {\n        id\n      }\n      category\n    }\n  }\n}`);\n\nexport const useIndexCategory = () => {\n    const raw = useIndexCategoryRaw();\n    return React.useMemo(() => {\n        const indices = raw.allIndexCategory.nodes;\n        return Object.fromEntries(indices.map(({index: { id }, category}) => [category, id]))\n    }, [raw]);\n};\n\nexport default useIndexCategory;\n","import { graphql, useStaticQuery } from \"gatsby\";\nimport * as React from \"react\";\n\nconst usePostListRaw = () => useStaticQuery(graphql`\nquery UsePostList {\n  allLink(sort: {post: {date: DESC}}) {\n    group(field: {index: {id: SELECT}}) {\n      index: fieldValue\n      nodes {\n        post {\n          title\n          slug\n        }\n      }\n    }\n  }\n}`);\n\nexport const usePostList = () => {\n    const raw = usePostListRaw();\n    return React.useMemo(() =>\n        Object.fromEntries(\n            raw.allLink.group\n                .map(({ index, nodes }) =>\n                    [index, nodes.map(l => l.post)])),\n        [raw]);\n}\n\nexport default usePostList;\n","import * as React from \"react\";\nimport useAbsolute from \"../hooks/use-absolute.js\";\nimport useSiteMetadata from \"../hooks/use-site-metadata.js\";\n\nexport const useWebsite = () => {\n    const site = useSiteMetadata();\n    const search = useAbsolute('/search');\n    const index = useAbsolute('/');\n    return React.useMemo(() => ({\n        \"@context\": \"https://schema.org\",\n        \"@type\": \"WebSite\",\n        \"name\": site.title,\n        \"description\": site.description,\n        \"url\": index,\n        \"potentialAction\": {\n            \"@type\": \"SearchAction\",\n            \"target\": {\n                \"@type\": \"EntryPoint\",\n                \"urlTemplate\": `${search}?s={s}`\n            },\n            \"query-input\": \"required name=s\"\n        }\n    }), [site, search, index]);\n};\n\nexport default useWebsite;\n","import * as React from \"react\";\nimport Banner from \"../components/banner.jsx\";\nimport BreadcrumbList from \"../components/breadcrumb-list.jsx\";\nimport HeadBasic from \"../components/head-basic.jsx\";\nimport Header from \"../components/header.jsx\";\nimport JsonLd from \"../components/json-ld.jsx\";\nimport Nav from \"../components/nav.jsx\";\nimport Post from \"../components/post.jsx\";\nimport PostList from \"../components/post-list.jsx\";\nimport Search from \"../components/search.jsx\";\nimport SeoBasic from \"../components/seo-basic.jsx\";\nimport Title from \"../components/title.jsx\";\nimport useAbsolute from \"../hooks/use-absolute.js\";\nimport useIndexAll from \"../hooks/use-index-all.js\";\nimport useIndexCategory from \"../hooks/use-index-category.js\";\nimport usePostList from \"../hooks/use-post-list.js\";\nimport useSiteMetadata from \"../hooks/use-site-metadata.js\";\nimport useWebsite from \"../hooks/use-website.js\";\n\nconst title = \"Table of Contents\";\n\nconst Index = () => {\n    const indices = usePostList();\n    const indexAll = useIndexAll();\n    const indexCategory = useIndexCategory();\n    const allPosts = indices[indexAll];\n    const postsByCategory =\n          Object.entries(indexCategory)\n          .map(([category, id]) => [category, indices[id]]);\n\n    return <>\n               <PostList posts={allPosts} />\n\n               {\n                   postsByCategory.map(([category, posts]) =>\n                       <React.Fragment key={category}>\n                           <h2>{category}</h2>\n                           <PostList posts={posts} />\n                       </React.Fragment>)\n               }\n           </>;\n};\n\nconst Sidebar = () => {\n    const { title, description } = useSiteMetadata();\n\n    return <>\n               <Header\n                   heading={\n                       <>\n                           <h2>{title}</h2>\n                           <p>{description}</p>\n                       </>}>\n                   <Banner />\n               </Header>\n               <Search />\n               <Nav heading={<h2>Breadcrumbs</h2>}>\n                   <BreadcrumbList>\n                       <li aria-current=\"page\">Home</li>\n                   </BreadcrumbList>\n               </Nav>\n           </>;\n};\n\nconst Foot = () => {\n    const json = useWebsite();\n    return <JsonLd srcdoc={json} />;\n};\n\nexport const Head = ({location: {pathname}}) => {\n    const url = useAbsolute(pathname);\n    return <>\n               <HeadBasic />\n               <Title>{title}</Title>\n               <link type=\"application/atom+xml\" rel=\"alternate\" href=\"/feed.xml\" />\n               <SeoBasic title={title} url={url} />\n           </>;\n};\n\nconst IndexPage = () =>\n<Post heading={<h1>Posts</h1>}\n      sidebar={<Sidebar />}\n      foot={<Foot />}>\n    <Index />\n</Post>;\n\nexport default IndexPage;\n"],"names":["children","props","href","download","target","startsWith","internal","linkish","to","srcdoc","json","JSON","stringify","type","useStaticQuery","indexAll","index","id","useSubmit","React","async","nativeEvent","event","form","submitter","action","getAttribute","enctype","method","preventDefault","url","URLSearchParams","FormData","navigate","rel","heading","Posts","posts","map","slug","title","key","length","reversed","onSubmit","titleId","inputId","className","role","htmlFor","name","required","raw","indices","allIndexCategory","nodes","Object","fromEntries","category","allLink","group","l","post","site","useSiteMetadata","search","useAbsolute","description","Index","usePostList","useIndexAll","indexCategory","useIndexCategory","allPosts","postsByCategory","entries","Sidebar","Foot","useWebsite","Head","location","pathname","sidebar","foot"],"sourceRoot":""}