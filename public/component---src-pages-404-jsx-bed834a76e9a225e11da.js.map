{"version":3,"file":"component---src-pages-404-jsx-bed834a76e9a225e11da.js","mappings":"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","sources":["webpack://words-to-kick-your-teeth-out/./src/hooks/use-opengraph.js","webpack://words-to-kick-your-teeth-out/./src/components/seo-basic.jsx","webpack://words-to-kick-your-teeth-out/./src/components/title.jsx","webpack://words-to-kick-your-teeth-out/./src/hooks/use-absolute.js","webpack://words-to-kick-your-teeth-out/./src/hooks/use-site-metadata.js","webpack://words-to-kick-your-teeth-out/./src/features/page/alert-page/index.jsx","webpack://words-to-kick-your-teeth-out/./src/pages/404.jsx","webpack://words-to-kick-your-teeth-out/./src/utils/flatten.js","webpack://words-to-kick-your-teeth-out/./src/utils/separator.js"],"sourcesContent":["import { useMemo } from 'react';\nimport useSiteMetadata from './use-site-metadata.js';\n\nexport const useOpenGraph = ({description, url, title}) => {\n    const site = useSiteMetadata();\n    return useMemo(() => {\n        return {\n            og: {\n                site_name: site.title,\n                title,\n                description: description ?? site.description,\n                url\n            }\n        };\n    }, [site, description, url, title]);\n};\n\nexport default useOpenGraph;\n","import flatten from \"../utils/flatten.js\";\nimport useSiteMetadata from '../hooks/use-site-metadata.js';\nimport useOpenGraph from '../hooks/use-opengraph.js';\n\nconst Open = props => {\n    const json = useOpenGraph(props);\n\n    return Array.from((function* (){\n        for (const [ix, k, v] of flatten(json)) {\n            yield <meta key={ix} property={k} content={v} />;\n        }\n    })());\n};\n\nexport const SeoBasic = props => {\n    const {description, url} = props;\n    const site = useSiteMetadata();\n    return <>\n               {url && <link rel=\"canonical\" href={url} /> }\n               <meta name=\"description\" content={description ?? site.description} />\n               <Open {...props} />\n           </>;\n};\n\nexport default SeoBasic;\n","import { useMemo } from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { separator } from \"../utils/separator.js\";\n\nconst useSiteTitle = () => useStaticQuery(graphql`\nquery {\n  site {\n    siteMetadata {\n      title\n    }\n  }\n}`);\n\nexport const useTitle = (...title) => {\n    const results = useSiteTitle();\n    return useMemo(() => {\n        const { title: siteTitle } = results.site.siteMetadata;\n        return [...title, siteTitle].join(separator);\n    }, [results, title]);\n};\n","import { graphql, useStaticQuery } from \"gatsby\";\nimport { useMemo } from \"react\";\n\nconst useMetadata = () => useStaticQuery(graphql`\nquery {\n  site {\n    siteMetadata {\n      siteUrl\n    }\n  }\n}`);\n\nexport const useAbsolute = pathname => {\n    const raw = useMetadata();\n    return useMemo(() => {\n        const site = raw.site.siteMetadata;\n        return String(new URL(pathname, site.siteUrl));\n    }, [raw, pathname]);\n};\n\nexport default useAbsolute;\n","import { graphql, useStaticQuery } from \"gatsby\";\n\nconst useSiteMetadataRaw = () => useStaticQuery(graphql`\nquery {\n  site {\n    siteMetadata {\n      title\n      description\n    }\n  }\n}`);\n\nexport const useSiteMetadata = () => useSiteMetadataRaw().site.siteMetadata;\n\nexport default useSiteMetadata;\n","import { Suspense, lazy } from \"react\";\nimport { ViewportPage } from \"../viewport-page\";\n\nconst AlertPageClient = lazy(() => import(\"../alert-page-client\"));\n\n// FIXME consider breadcrumbs\nexport const AlertPage = ({children, heading}) =>\n<Suspense\n    fallback={\n        <ViewportPage heading={heading}>\n            {children}\n        </ViewportPage>\n    }>\n    <AlertPageClient heading={heading}>\n        {children}\n    </AlertPageClient>\n</Suspense>\n\nexport default AlertPage;\n","import { AlertPage } from \"@features/page\";\nimport { P } from \"@features/ui\";\nimport SeoBasic from \"../components/seo-basic.jsx\";\nimport { useTitle } from \"../components/title.jsx\";\nimport useAbsolute from \"../hooks/use-absolute.js\";\n\nconst title = \"Page Not Found\";\n\nexport const Head = ({location: {pathname}}) => {\n    const url = useAbsolute(pathname);\n    const fulltitle = useTitle(title);\n    return <>\n               <title>{fulltitle}</title>\n               <SeoBasic title={title} url={url} />\n           </>;\n};\n\nconst NotFoundPage = () =>\n<AlertPage heading=\"Page Not Found\">\n    <P>Sorry the page you requested could not be found.</P>\n</AlertPage>;\n\nexport default NotFoundPage;\n","const loop = function *loop(ix, key, value) {\n    if (typeof value === 'string') {\n        yield [ix, key, value];\n        return;\n    }\n\n    if (Array.isArray(value)) {\n        let ii = 0;\n        for (const x of value) {\n            for (const l of loop(`${ix}${ii}`, key, x)) {\n                yield l;\n            }\n            ++ii;\n        }\n        return;\n    }\n\n    for (const [k, v] of Object.entries(value)) {\n        const prop = key ? `${key}:${k}` : k ;\n        const newix = key ? `${ix}:${k}` : k ;\n        for (const l of loop(newix, prop, v)) {\n            yield l;\n        }\n    }\n};\n\nexport const flatten = function*(value) {\n    for (const l of loop(null, null, value)) {\n        yield l;\n    }\n};\n\nexport default flatten;\n","export const separator = \"\\u2009\\u2014\\u2009\";\n\nexport default separator;\n"],"names":["_ref","description","url","title","site","useSiteMetadata","useMemo","og","site_name","Open","props","json","useOpenGraph","Array","from","ix","k","v","flatten","_jsx","property","content","SeoBasic","_jsxs","_Fragment","children","rel","href","name","useTitle","_len","arguments","length","_key","results","useStaticQuery","siteTitle","siteMetadata","join","separator","useAbsolute","pathname","raw","String","URL","siteUrl","AlertPageClient","lazy","AlertPage","heading","Suspense","fallback","ViewportPage","Head","location","fulltitle","NotFoundPage","P","loop","key","value","isArray","ii","x","l","Object","entries","prop","newix"],"sourceRoot":""}