{"version":3,"file":"894-2c44db501a112eac9ce9.js","mappings":"yNAEA,MAAMA,EACoB,oBAAXC,SAGkC,IAAtCC,SAASC,cAAc,KAAKC,MAGjCC,GAAqBC,EAAAA,EAAAA,OAAK,IAAM,wDAChCC,GAAkBD,EAAAA,EAAAA,OAAK,IAAM,wDAKtBE,EAAaC,IACtB,MAAMC,EAAOV,EAAgBK,EAAqBE,EAClD,OAAOI,EAAAA,EAAAA,KAACD,EAAI,IAAKD,GAAS,EAG9B,W","sources":["webpack://words-to-kick-your-teeth-out/./src/features/ui/pane-client/index.jsx"],"sourcesContent":["import { lazy } from \"react\";\n\nconst supportsInert = (() => {\n    if (typeof window === 'undefined') {\n        return false;\n    }\n    return document.createElement('p').inert === false;\n})();\n\nconst PaneClientNoninert = lazy(() => import(\"./pane-client.jsx\"));\nconst PaneClientInert = lazy(() => import(\"./pane-client-inert.jsx\"));\n\n// FIXME this is kind of silly but a better structure would really\n// only be possible with top level await\n\nexport const PaneClient = props => {\n    const Pane = supportsInert ? PaneClientNoninert : PaneClientInert;\n    return <Pane {...props} />;\n};\n\nexport default PaneClient;\n"],"names":["supportsInert","window","document","createElement","inert","PaneClientNoninert","lazy","PaneClientInert","PaneClient","props","Pane","_jsx"],"sourceRoot":""}