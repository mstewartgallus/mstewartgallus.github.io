{"version":3,"file":"component---src-pages-index-jsx-bdeaa469702458d232f5.js","mappings":"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","sources":["webpack://words-to-kick-your-teeth-out/./src/components/json-ld.jsx","webpack://words-to-kick-your-teeth-out/./src/hooks/use-opengraph.js","webpack://words-to-kick-your-teeth-out/./src/components/seo-basic.jsx","webpack://words-to-kick-your-teeth-out/./src/components/title.jsx","webpack://words-to-kick-your-teeth-out/./src/features/polyfill/search.jsx","webpack://words-to-kick-your-teeth-out/./src/features/route/use-search-url.js","webpack://words-to-kick-your-teeth-out/./src/features/ui/breadcrumb-list/breadcrumb-list.module.css","webpack://words-to-kick-your-teeth-out/./src/features/ui/breadcrumb-list/index.jsx","webpack://words-to-kick-your-teeth-out/./src/features/ui/button/index.jsx","webpack://words-to-kick-your-teeth-out/./src/features/ui/input/index.jsx","webpack://words-to-kick-your-teeth-out/./src/features/ui/input/input.module.css","webpack://words-to-kick-your-teeth-out/./src/hooks/use-absolute.js","webpack://words-to-kick-your-teeth-out/./src/hooks/use-site-metadata.js","webpack://words-to-kick-your-teeth-out/./src/hooks/use-submit.js","webpack://words-to-kick-your-teeth-out/./src/features/index/panel-server/index.jsx","webpack://words-to-kick-your-teeth-out/./src/features/index/panel/index.jsx","webpack://words-to-kick-your-teeth-out/./src/features/index/post-list.jsx","webpack://words-to-kick-your-teeth-out/./src/features/index/use-website.js","webpack://words-to-kick-your-teeth-out/./src/features/index/use-posts.js","webpack://words-to-kick-your-teeth-out/./src/features/index/use-post-list.js","webpack://words-to-kick-your-teeth-out/./src/features/index/sidebar.jsx","webpack://words-to-kick-your-teeth-out/./src/features/index/banner.jsx","webpack://words-to-kick-your-teeth-out/./src/features/search/components/search-form-mini/index.jsx","webpack://words-to-kick-your-teeth-out/./src/features/search/components/search-form-mini/search-form.module.css","webpack://words-to-kick-your-teeth-out/./src/features/ui/header.jsx","webpack://words-to-kick-your-teeth-out/./src/pages/index.jsx","webpack://words-to-kick-your-teeth-out/./src/utils/flatten.js","webpack://words-to-kick-your-teeth-out/./src/utils/separator.js"],"sourcesContent":["import { useMemo } from \"react\";\n\nexport const JsonLd = ({srcdoc}) => {\n    const json = useMemo(() => JSON.stringify(srcdoc), [srcdoc]);\n    return <script type=\"application/ld+json\">{json}</script>;\n};\n\nexport default JsonLd;\n","import { useMemo } from 'react';\nimport useSiteMetadata from './use-site-metadata.js';\n\nexport const useOpenGraph = ({description, url, title}) => {\n    const site = useSiteMetadata();\n    return useMemo(() => {\n        return {\n            og: {\n                site_name: site.title,\n                title,\n                description: description ?? site.description,\n                url\n            }\n        };\n    }, [site, description, url, title]);\n};\n\nexport default useOpenGraph;\n","import flatten from \"../utils/flatten.js\";\nimport useSiteMetadata from '../hooks/use-site-metadata.js';\nimport useOpenGraph from '../hooks/use-opengraph.js';\n\nconst Open = props => {\n    const json = useOpenGraph(props);\n\n    return Array.from((function* (){\n        for (const [ix, k, v] of flatten(json)) {\n            yield <meta key={ix} property={k} content={v} />;\n        }\n    })());\n};\n\nexport const SeoBasic = props => {\n    const {description, url} = props;\n    const site = useSiteMetadata();\n    return <>\n               {url && <link rel=\"canonical\" href={url} /> }\n               <meta name=\"description\" content={description ?? site.description} />\n               <Open {...props} />\n           </>;\n};\n\nexport default SeoBasic;\n","import { useMemo } from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { separator } from \"../utils/separator.js\";\n\nconst useSiteTitle = () => useStaticQuery(graphql`\nquery {\n  site {\n    siteMetadata {\n      title\n    }\n  }\n}`);\n\nexport const useTitle = (...title) => {\n    const results = useSiteTitle();\n    return useMemo(() => {\n        const { title: siteTitle } = results.site.siteMetadata;\n        return [...title, siteTitle].join(separator);\n    }, [results, title]);\n};\n","import { forwardRef } from \"react\";\n\nconst Search = ({children, ...props}, ref) =>\n<search ref={ref} role=\"search\" {...props}>\n    {children}\n</search>;\n\nconst SearchRef = forwardRef(Search);\n\nexport { SearchRef as Search, SearchRef as default };\n","import { useMemo } from 'react';\nimport { withPrefix } from \"gatsby\";\n\nconst path = \"/search\";\n\nconst lb = (label, xs = []) => xs.map(x => [label, x]);\n\nexport const useSearchURL = xs => {\n    const {s, category, tag, place, person} = xs ?? {};\n    return useMemo(() => {\n        const opts = [\n            ...(s ? ['s', s] : []),\n            ...lb('category', category),\n            ...lb('tag', tag),\n            ...lb('place', place),\n            ...lb('person', person)\n        ];\n\n        const p = String(new URLSearchParams(opts));\n        const y =  p === '' ? path : `${path}?${p}` ;\n        return withPrefix(y);\n    }, [s, category, tag, place, person]);\n};\n\nexport default useSearchURL;\n","// extracted by mini-css-extract-plugin\nexport var breadcrumb = \"breadcrumb-list-module--breadcrumb--64b46\";\nexport var breadcrumblist = \"breadcrumb-list-module--breadcrumblist--d89e2\";","import { breadcrumblist, breadcrumb } from \"./breadcrumb-list.module.css\";\n\nexport const BreadcrumbList = ({children, ...props}) =>\n<ol className={breadcrumblist} {...props}>{children}</ol>;\n\nexport const BreadcrumbItem = ({children, ...props}) =>\n<li className={breadcrumb} {...props}>{children}</li>;\n","import { forwardRef } from \"react\";\nimport { useUnder } from \"@features/util\";\nimport { button } from \"./button.module.css\";\n\nconst Button = ({children, id, className = '', ...props}, ref) => {\n    const under = useUnder();\n    if (under) {\n        id = null;\n    }\n    return <button id={id} className={`${button} ${className}`} ref={ref} {...props}>\n               {children}\n           </button>;\n};\n\nconst ButtonRef = forwardRef(Button);\n\nexport { ButtonRef as Button, ButtonRef as default };\n","import { forwardRef } from \"react\";\nimport { input } from \"./input.module.css\";\n\nconst Input = ({children, ...props}, ref) =>\n<input className={input} ref={ref} {...props}>\n    {children}\n</input>;\n\nconst InputRef = forwardRef(Input);\n\nexport { InputRef as Input, InputRef as default };\n","// extracted by mini-css-extract-plugin\nexport var input = \"input-module--input--4ad14\";","import { graphql, useStaticQuery } from \"gatsby\";\nimport { useMemo } from \"react\";\n\nconst useMetadata = () => useStaticQuery(graphql`\nquery {\n  site {\n    siteMetadata {\n      siteUrl\n    }\n  }\n}`);\n\nexport const useAbsolute = pathname => {\n    const raw = useMetadata();\n    return useMemo(() => {\n        const site = raw.site.siteMetadata;\n        return String(new URL(pathname, site.siteUrl));\n    }, [raw, pathname]);\n};\n\nexport default useAbsolute;\n","import { graphql, useStaticQuery } from \"gatsby\";\n\nconst useSiteMetadataRaw = () => useStaticQuery(graphql`\nquery {\n  site {\n    siteMetadata {\n      title\n      description\n    }\n  }\n}`);\n\nexport const useSiteMetadata = () => useSiteMetadataRaw().site.siteMetadata;\n\nexport default useSiteMetadata;\n","import { useCallback } from \"react\";\nimport { navigate } from \"gatsby\";\nimport { interceptEnabled } from \"@features/intercept\";\n\nexport const useSubmit = () => {\n    return useCallback(async event => {\n        if (interceptEnabled()) {\n            return;\n        }\n\n        const nativeEvent = event.nativeEvent;\n        const form = event.target;\n        const submitter = nativeEvent.submitter;\n\n        let action = submitter.getAttribute('formaction');\n        let enctype = submitter.getAttribute('formenctype');\n        let method = submitter.getAttribute('formmethod');\n        let target = submitter.getAttribute('formtarget');\n\n        action ??= form.getAttribute('action');\n        enctype ??= form.getAttribute('enctype');\n        method ??= form.method;\n        target ??= form.getAttribute('target');\n\n        if (enctype !== null) {\n            return;\n        }\n        if (method !== 'get') {\n            return;\n        }\n        if (target !== null) {\n            return;\n        }\n\n        event.preventDefault();\n\n        const search = new URLSearchParams(new FormData(form));\n\n        const url = `${action}?${search}`;\n\n        // FIXME what if external url ?\n        await navigate(url);\n    }, []);\n};\n\nexport default useSubmit;\n","import { useId } from \"react\";\nimport { H2 } from \"@features/ui\";\n\nexport const PanelServer = ({id, children, heading}) =>\n<nav aria-labelledby={id}>\n    <header>\n        <hgroup>\n            <H2 id={id}>\n                {heading}\n            </H2>\n        </hgroup>\n    </header>\n    {children}\n</nav>;\n\nexport default PanelServer;\n","import { lazy, memo, createContext, useContext } from \"react\";\nimport { useClient } from \"@features/util\";\nimport { Card } from \"@features/ui\";\nimport { PanelServer } from \"../panel-server\";\n\nconst PanelClient = lazy(() => import(\"../panel-client\"));\n\nconst Context = createContext(null);\nContext.displayName = 'Accordion';\n\nconst ContextProvider = memo(Context.Provider);\nexport const Accordion = ({children, value}) =>\n<div>\n    <ContextProvider value={value}>\n        {children}\n    </ContextProvider>\n</div>;\n\nconst PanelDynamic = ({id, children, heading, open, onClick}) => {\n    const client = useClient();\n    return client ?\n        <PanelClient id={id} heading={heading} open={open} onClick={onClick}>\n            {children}\n        </PanelClient> :\n    <PanelServer id={id} heading={heading}>\n        {children}\n    </PanelServer>;\n};\n\nexport const Panel = ({id, children, heading, value, onClick}) => {\n    const selected = useContext(Context);\n    const open = selected === value;\n\n    return <Card>\n               <PanelDynamic id={id} heading={heading} open={open} onClick={onClick}>\n                   {children}\n               </PanelDynamic>\n           </Card>;\n};\n","import { A, Ol, Li } from \"@features/ui\";\n\nconst Entry = ({href, children}) =>\n<Li><A href={href}>{children}</A></Li>;\n\nconst EntryList = ({children}) =>\n<Ol reversed=\"reversed\">\n    {children}\n</Ol>;\n\nconst Posts = ({posts}) => posts.map(({ slug, title }) =>\n    <Entry key={slug} href={slug}>{title}</Entry>\n);\n\nexport const PostList = ({posts}) =>\nposts && posts.length > 0 &&\n    <EntryList>\n        <Posts posts={posts} />\n    </EntryList>;\n\nexport default PostList;\n","import { useMemo } from \"react\";\nimport useAbsolute from \"../../hooks/use-absolute.js\";\nimport useSiteMetadata from \"../../hooks/use-site-metadata.js\";\n\nexport const useWebsite = () => {\n    const site = useSiteMetadata();\n    const search = useAbsolute('/search');\n    const index = useAbsolute('/');\n    return useMemo(() => ({\n        \"@context\": \"https://schema.org\",\n        \"@type\": \"WebSite\",\n        \"name\": site.title,\n        \"description\": site.description,\n        \"url\": index,\n        \"potentialAction\": {\n            \"@type\": \"SearchAction\",\n            \"target\": {\n                \"@type\": \"EntryPoint\",\n                \"urlTemplate\": `${search}?s={s}`\n            },\n            \"query-input\": \"required name=s\"\n        }\n    }), [site, search, index]);\n};\n\nexport default useWebsite;\n","import { useMemo } from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\n\nconst usePostsRaw = () => useStaticQuery(graphql`\nquery UsePosts {\n  allLink(sort: {post: {date: DESC}}, filter: {category: {eq: \"\"}}) {\n    nodes {\n      post {\n        title\n        slug\n      }\n    }\n  }\n}`);\n\nexport const usePosts = () => {\n    const raw = usePostsRaw();\n    return useMemo(() => raw.allLink.nodes.map(p => p.post), [raw]);\n}\n\nexport default usePosts;\n","import { useMemo } from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\n\nconst usePostListRaw = () => useStaticQuery(graphql`\nquery UsePostList {\n  allLink(sort: {post: {date: DESC}}, filter: {category: {ne: \"\"}}) {\n    group(field: {category: SELECT}) {\n      category: fieldValue\n      nodes {\n        post {\n          title\n          slug\n        }\n      }\n    }\n  }\n}`);\n\nexport const usePostList = () => {\n    const raw = usePostListRaw();\n    return useMemo(() =>\n        Object.fromEntries(\n            raw.allLink.group\n                .map(({ category, nodes }) =>\n                    [category, nodes.map(l => l.post)])),\n        [raw]);\n}\n\nexport default usePostList;\n","import { Assistive } from \"@features/util\";\nimport { Search } from \"@features/polyfill\";\nimport { Hgroup, Card, H2 } from \"@features/ui\";\n\nexport const Sidebar = ({children, search}) =>\n<>\n    {children}\n    <Card>\n        <Search aria-describedby=\"search\">\n            <Assistive>\n                <header>\n                    <Hgroup>\n                        <H2 id=\"search\">Search</H2>\n                    </Hgroup>\n                </header>\n            </Assistive>\n            {search}\n        </Search>\n    </Card>\n    </>;\n\nexport default Sidebar;\n","import { A, Ul, Li } from \"@features/ui\";\n\nexport const Banner = () =>\n<Ul>\n    <Li><A download=\"feed.xml\" rel=\"alternate\" href=\"/feed.xml\">Subscribe (RSS)</A></Li>\n    <Li><A rel=\"author\" href=\"/about\">About the Author</A></Li>\n    <Li><A href=\"/README\">About this Blog</A></Li>\n    <Li><A rel=\"nofollow\" href=\"/404\">Test 404 Page</A></Li>\n</Ul>;\n\nexport default Banner;\n","import { useId } from \"react\";\nimport { Input, Button } from \"@features/ui\";\nimport { query } from \"./search-form.module.css\";\n\nexport const SearchFormMini = ({action, onSubmit}) => {\n    const id = useId();\n\n    return <form rel=\"search\" action={action} onSubmit={onSubmit}>\n               <fieldset className={query}>\n                   <label htmlFor={id}>Query</label>\n                   <Input id={id} name=\"s\" type=\"search\" required />\n                   <Button type=\"submit\">Search</Button>\n               </fieldset>\n           </form>;\n};\n\nexport default SearchFormMini;\n","// extracted by mini-css-extract-plugin\nexport var query = \"search-form-module--query--910f7\";","import { useId } from \"react\";\nimport { Hgroup } from \"./hgroup\";\n\nexport const Header = ({children, heading, ...props}) => {\n    const id = useId();\n    return <header aria-describedby={id} {...props}>\n               <Hgroup id={id}>\n                   {heading}\n               </Hgroup>\n               {children}\n           </header>;\n};\n\nexport default Header;\n","import { useLocation } from \"@gatsbyjs/reach-router\";\nimport { useCallback, useMemo, useReducer } from \"react\";\nimport { Sidebar, Banner, Accordion, Panel, PostList, usePostList, usePosts, useWebsite } from \"@features/index\";\nimport { useSearchURL } from \"@features/route\";\nimport { SearchFormMini } from \"@features/search\";\nimport {\n    BreadcrumbList, BreadcrumbItem,\n    Card,\n    A,\n    H2,\n    Ul, Li,\n    Header\n} from \"@features/ui\";\nimport { ViewportPage, SkipA } from \"@features/page\";\nimport JsonLd from \"../components/json-ld.jsx\";\nimport SeoBasic from \"../components/seo-basic.jsx\";\nimport { useTitle } from \"../components/title.jsx\";\nimport useAbsolute from \"../hooks/use-absolute.js\";\nimport useSiteMetadata from \"../hooks/use-site-metadata.js\";\nimport { useSubmit } from \"../hooks/use-submit.js\";\n\nconst initState = null;\n\nconst reducer = (state, action) => {\n    const { type } = action;\n    switch (type) {\n    case 'toggle': {\n        const { category } = action;\n        return state === category ? null : category;\n    }\n\n    default:\n        return state;\n    }\n};\n\nconst Panels = ({posts, onClick}) => useMemo(() => Object.entries(posts).map(([category, posts]) =>\n    [category, {\n        posts,\n        onClick(e) {\n            onClick(category, e);\n        }\n    }]), [posts, onClick]).map(([category, { posts, onClick }]) =>\n        <Panel\n            key={category}\n            value={category}\n            id={category}\n            heading={category}\n            onClick={onClick}>\n            <PostList posts={posts} />\n        </Panel>\n    );\n\nconst AccordionImpl = ({posts}) => {\n    const [state, dispatch] = useReducer(reducer, initState);\n\n    const onClick = useCallback((category, e) => {\n        dispatch({ type: 'toggle', category });\n    }, []);\n\n    return <Accordion value={state}>\n               <Panels posts={posts} onClick={onClick} />\n           </Accordion>;\n};\n\nconst title = \"Table of Contents\";\n\nconst Seo = () => {\n    const { pathname } = useLocation();\n    const url = useAbsolute(pathname);\n    return <SeoBasic title={title} url={url} />;\n};\n\nconst TableOfContents = ({posts}) =>\n      <>\n          <SkipA aria-describedby=\"content\" href=\"#content\">Posts</SkipA>\n          <Ul>\n              {\n                  posts.map(category =>\n                      <Li key={category}><A href={`#${category}`}>{category}</A></Li>)\n              }\n              <Li><A href=\"#banner\" aria-describedby=\"banner\">Common</A></Li>\n              <Li><A href=\"#search\">Search</A></Li>\n              <Li><A href=\"#breadcrumbs\">Breadcrumbs</A></Li>\n          </Ul>\n      </>;\n\nexport const Head = () => {\n    const json = useWebsite();\n    const fulltitle = useTitle(title);\n    return <>\n               <title>{fulltitle}</title>\n               <link type=\"application/atom+xml\" rel=\"alternate\" href=\"/feed.xml\" />\n               <Seo />\n               <JsonLd srcdoc={json} />\n           </>;\n};\n\nconst IndexPage = () => {\n    const posts = usePosts();\n    const { title, description } = useSiteMetadata();\n    const onSubmit = useSubmit();\n    const search = useSearchURL();\n    const postsByCategory = usePostList();\n    return <ViewportPage\n               tableOfContents={<TableOfContents posts={Object.keys(postsByCategory)} />}\n               sidebar={\n                   <Sidebar\n                       search={\n                           <SearchFormMini action={search} onSubmit={onSubmit} />\n                       }\n                   >\n                       <Card>\n                           <Header\n                               heading={\n                                   <>\n                                       <H2 id=\"banner\">{title}</H2>\n                                       <p style={{marginBlock:0}}>{description}</p>\n                                   </>}>\n                               <Banner />\n                           </Header>\n                       </Card>\n                   </Sidebar>\n               }\n               breadcrumbs={\n                   <BreadcrumbList>\n                       <BreadcrumbItem>\n                           <span aria-current=\"page\">Home</span>\n                       </BreadcrumbItem>\n                   </BreadcrumbList>\n               }\n               mainbar={<AccordionImpl posts={postsByCategory} />}\n\n               heading=\"Posts\"\n           >\n               <PostList posts={posts} />\n           </ViewportPage>;\n};\n\n\nexport default IndexPage;\n","const loop = function *loop(ix, key, value) {\n    if (typeof value === 'string') {\n        yield [ix, key, value];\n        return;\n    }\n\n    if (Array.isArray(value)) {\n        let ii = 0;\n        for (const x of value) {\n            for (const l of loop(`${ix}${ii}`, key, x)) {\n                yield l;\n            }\n            ++ii;\n        }\n        return;\n    }\n\n    for (const [k, v] of Object.entries(value)) {\n        const prop = key ? `${key}:${k}` : k ;\n        const newix = key ? `${ix}:${k}` : k ;\n        for (const l of loop(newix, prop, v)) {\n            yield l;\n        }\n    }\n};\n\nexport const flatten = function*(value) {\n    for (const l of loop(null, null, value)) {\n        yield l;\n    }\n};\n\nexport default flatten;\n","export const separator = \"\\u2009\\u2014\\u2009\";\n\nexport default separator;\n"],"names":["_ref","srcdoc","json","useMemo","JSON","stringify","_jsx","type","children","description","url","title","site","useSiteMetadata","og","site_name","Open","props","useOpenGraph","Array","from","ix","k","v","flatten","property","content","_jsxs","_Fragment","rel","href","name","useTitle","_len","arguments","length","_key","results","useStaticQuery","siteTitle","siteMetadata","join","separator","Search","ref","role","SearchRef","forwardRef","path","lb","label","xs","map","x","useSearchURL","s","category","tag","place","person","opts","p","String","URLSearchParams","y","withPrefix","BreadcrumbList","className","BreadcrumbItem","_ref2","Button","id","useUnder","button","ButtonRef","Input","InputRef","pathname","raw","URL","siteUrl","useSubmit","useCallback","async","_action","_enctype","_method","_target","interceptEnabled","nativeEvent","event","form","target","submitter","action","getAttribute","enctype","method","preventDefault","FormData","navigate","PanelServer","heading","H2","PanelClient","lazy","Context","createContext","displayName","ContextProvider","memo","Provider","Accordion","value","PanelDynamic","open","onClick","useClient","Panel","_ref3","useContext","Card","Entry","Li","A","EntryList","Ol","reversed","Posts","posts","_ref4","slug","PostList","_ref5","useWebsite","search","useAbsolute","index","usePosts","allLink","nodes","post","usePostList","Object","fromEntries","group","l","Sidebar","Assistive","Hgroup","Banner","Ul","download","SearchFormMini","onSubmit","useId","htmlFor","required","Header","reducer","state","Panels","entries","e","AccordionImpl","dispatch","useReducer","Seo","useLocation","SeoBasic","TableOfContents","SkipA","Head","fulltitle","JsonLd","IndexPage","postsByCategory","ViewportPage","tableOfContents","keys","sidebar","style","marginBlock","breadcrumbs","mainbar","loop","key","isArray","ii","prop","newix"],"sourceRoot":""}