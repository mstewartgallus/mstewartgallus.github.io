{"version":3,"file":"823-9e5edfe8084a96568d6f.js","mappings":"gOAIA,MAcMA,EAAaA,CAACC,EAAQC,KAAA,IAAE,OAAEC,GAAQD,EAAA,OAAKE,IACzC,MAAM,YAAEC,EAAW,aAAEC,EAAY,gBAAEC,GAAoBH,EAEvD,IAAKE,GAAgBC,EACjB,OAGJ,GAAI,IAAIC,IAAIH,EAAYI,KAAKR,WAAaA,EACtC,OAGJ,MAAMS,EAzBUC,KAAA,IAAC,OAAER,GAAQQ,EAAA,OAAK,IAAIC,SAAQC,IAC5CV,EAAOW,iBAAiB,SAAS,KAC7BC,EAAAA,GAAAA,OAAoBF,EAAE,IAE1BE,EAAAA,GAAAA,IAAiBF,EAAE,GACrB,EAoBwBG,CAAY,CAAEb,WAC9Bc,EAnBiBC,KAAA,IAAC,OAAEf,GAAQe,EAAA,OAAK,IAAIN,SAAQC,IACnDV,EAAOW,iBAAiB,SAAS,KAC7BK,EAAAA,GAAAA,OAAmBN,EAAE,IAEzBM,EAAAA,GAAAA,IAAgBN,EAAE,GACpB,EAc+BO,CAAmB,CAAEjB,WAElDkB,SAASC,qBAAoB,IAAMV,QAAQW,KAAK,CAC5CN,EACAP,KACD,CACN,EClCD,MDoC8Bc,KAC1B,MAAM,SAAEvB,IAAawB,EAAAA,EAAAA,eAWrB,OAVAC,EAAAA,EAAAA,YAAU,KACN,IAAKC,OAAOC,aAAeP,SAASC,oBAChC,OAEJ,MAAMO,EAAQ,IAAIC,iBACZ,OAAE3B,GAAW0B,EACbE,EAAU,CAAEC,SAAS,EAAM7B,UAEjC,OADAwB,OAAOC,WAAWd,iBAAiB,WAAYd,EAAWC,EAAU,CAAEE,WAAW4B,GAC1E,IAAMF,EAAMA,OAAO,GAC3B,CAAC5B,IACG,IAAI,C","sources":["webpack://words-to-kick-your-teeth-out/./src/features/view-transition/view-transition.jsx","webpack://words-to-kick-your-teeth-out/./src/features/layout/view-transition.jsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport { useLocation } from \"@gatsbyjs/reach-router\";\nimport { routeUpdates, routeDelays } from \"./listeners.js\";\n\nconst routeUpdate = ({ signal }) => new Promise(r => {\n    signal.addEventListener('abort', () => {\n        routeUpdates.delete(r);\n    });\n    routeUpdates.add(r);\n});\n\nconst routeUpdateDelayed = ({ signal }) => new Promise(r => {\n    signal.addEventListener('abort', () => {\n        routeDelays.delete(r);\n    });\n    routeDelays.add(r);\n});\n\nconst onNavigate = (pathname, { signal }) => e => {\n    const { destination, canIntercept, downloadRequest } = e;\n\n    if (!canIntercept || downloadRequest) {\n        return;\n    }\n\n    if (new URL(destination.url).pathname === pathname) {\n        return;\n    }\n\n    const routeUpdatePs = routeUpdate({ signal });\n    const routeUpdateDelayedPs = routeUpdateDelayed({ signal });\n    // FIXME update focus AFTER transition\n    document.startViewTransition(() => Promise.race([\n        routeUpdateDelayedPs,\n        routeUpdatePs\n    ]));\n};\n\nexport const ViewTransition = () => {\n    const { pathname } = useLocation();\n    useEffect(() => {\n        if (!window.navigation || !document.startViewTransition) {\n            return;\n        }\n        const abort = new AbortController();\n        const { signal } = abort;\n        const options = { passive: true, signal };\n        window.navigation.addEventListener('navigate', onNavigate(pathname, { signal }), options);\n        return () => abort.abort();\n    }, [pathname]);\n    return null;\n};\n","import { ViewTransition } from \"@features/view-transition\";\n\nexport default ViewTransition;\n"],"names":["onNavigate","pathname","_ref3","signal","e","destination","canIntercept","downloadRequest","URL","url","routeUpdatePs","_ref","Promise","r","addEventListener","routeUpdates","routeUpdate","routeUpdateDelayedPs","_ref2","routeDelays","routeUpdateDelayed","document","startViewTransition","race","ViewTransition","useLocation","useEffect","window","navigation","abort","AbortController","options","passive"],"sourceRoot":""}