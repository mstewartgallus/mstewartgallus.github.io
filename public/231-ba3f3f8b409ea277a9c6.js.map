{"version":3,"file":"231-ba3f3f8b409ea277a9c6.js","mappings":"6NAGA,MAAMA,EAAaC,IACf,MAAM,WAAEC,EAAU,aAAEC,EAAY,gBAAEC,GAAoBH,EAEtD,IAAKE,GAAgBC,GAAmBF,EACpC,OAGJ,MAAMG,GAAgBC,EAAAA,EAAAA,MAChBC,GAAuBC,EAAAA,EAAAA,MAE7BC,SAASC,qBAAoB,IAAMC,QAAQC,KAAK,CAC5CL,EACAF,KACD,EAGMQ,EAAiBA,MAC1BC,EAAAA,EAAAA,YAAU,KACN,IAAKC,OAAOC,aAAeP,SAASC,oBAChC,OAEJ,MAAMO,EAAQ,IAAIC,iBACZ,OAAEC,GAAWF,EACbG,EAAU,CAAEC,SAAS,EAAMF,UAEjC,OADAJ,OAAOC,WAAWM,iBAAiB,WAAYtB,EAAYoB,GACpD,IAAMH,EAAMA,OAAO,GAC3B,IACI,MAGX,W","sources":["webpack://words-to-kick-your-teeth-out/./src/features/view-transition/view-transition.jsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport { routeUpdate, routeUpdateDelayed } from \"./listeners.js\";\n\nconst onNavigate = e => {\n    const { hashChange, canIntercept, downloadRequest } = e;\n\n    if (!canIntercept || downloadRequest || hashChange) {\n        return;\n    }\n\n    const routeUpdatePs = routeUpdate();\n    const routeUpdateDelayedPs = routeUpdateDelayed();\n    // FIXME update focus AFTER transition\n    document.startViewTransition(() => Promise.race([\n        routeUpdateDelayedPs,\n        routeUpdatePs\n    ]));\n};\n\nexport const ViewTransition = () => {\n    useEffect(() => {\n        if (!window.navigation || !document.startViewTransition) {\n            return;\n        }\n        const abort = new AbortController();\n        const { signal } = abort;\n        const options = { passive: true, signal };\n        window.navigation.addEventListener('navigate', onNavigate, options);\n        return () => abort.abort();\n    }, []);\n    return null;\n};\n\nexport default ViewTransition;\n"],"names":["onNavigate","e","hashChange","canIntercept","downloadRequest","routeUpdatePs","routeUpdate","routeUpdateDelayedPs","routeUpdateDelayed","document","startViewTransition","Promise","race","ViewTransition","useEffect","window","navigation","abort","AbortController","signal","options","passive","addEventListener"],"sourceRoot":""}