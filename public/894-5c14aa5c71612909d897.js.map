{"version":3,"file":"894-5c14aa5c71612909d897.js","mappings":"yNAEA,MAOMA,GAAqBC,EAAAA,EAAAA,OAAK,IAAM,wDAChCC,GAAkBD,EAAAA,EAAAA,OAAK,IAAM,wDAKtBE,EAAaC,GAZA,oBAAXC,SAGkC,IAAtCC,SAASC,cAAc,KAAKC,OAW/BC,EAAAA,EAAAA,KAACT,EAAkB,IAAKI,KAAYK,EAAAA,EAAAA,KAACP,EAAe,IAAKE,IAGjE,W","sources":["webpack://words-to-kick-your-teeth-out/./src/features/ui/pane-client/index.jsx"],"sourcesContent":["import { lazy } from \"react\";\n\nconst supportsInert = () => {\n    if (typeof window === 'undefined') {\n        return false;\n    }\n    return document.createElement('p').inert === false;\n};\n\nconst PaneClientNoninert = lazy(() => import(\"./pane-client.jsx\"));\nconst PaneClientInert = lazy(() => import(\"./pane-client-inert.jsx\"));\n\n// FIXME this is kind of silly but a better structure would really\n// only be possible with top level await\n\nexport const PaneClient = props => {\n    return supportsInert() ?\n        <PaneClientNoninert {...props} /> : <PaneClientInert {...props} />;\n};\n\nexport default PaneClient;\n"],"names":["PaneClientNoninert","lazy","PaneClientInert","PaneClient","props","window","document","createElement","inert","_jsx"],"sourceRoot":""}