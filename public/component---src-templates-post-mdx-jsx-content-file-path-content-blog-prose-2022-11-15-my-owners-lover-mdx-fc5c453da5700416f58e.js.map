{"version":3,"file":"component---src-templates-post-mdx-jsx-content-file-path-content-blog-prose-2022-11-15-my-owners-lover-mdx-fc5c453da5700416f58e.js","mappings":"wNAiCO,MAAMA,EAAa,gBAAoB,CAAC,GAoCxC,SAASC,EAAiBC,GAC/B,MAAMC,EAAoB,aAAiBH,GAG3C,OAAO,WAAc,IAEO,mBAAfE,EACFA,EAAWC,GAEb,IACFA,KACAD,IAEJ,CAACC,EAAmBD,GACzB,CAGA,MAAME,EAAc,CAAC,EAQd,SAASC,EAAYC,GAC1B,IAMIC,GANA,WACFL,EAAU,SACVM,EAAQ,qBACRC,GACEH,EAQJ,OAJEC,EADEE,EACoC,mBAAfP,EAA4BA,EAAW,CAAC,GAAKA,GAAcE,EAElEH,EAAiBC,GAE5B,gBAAoBF,EAAWU,SAAU,CAC9CC,MAAOJ,GACNC,EACL,C,gIC3GA,SAASI,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,MACFC,EAAAA,EAAAA,MAAsBL,EAAMX,YAC/B,OAAOiB,EAAAA,EAAAA,MAAMC,EAAAA,SAAW,CACtBZ,SAAU,EAACa,EAAAA,EAAAA,KAAKP,EAAYG,EAAG,CAC7BT,SAAU,wPACR,MAAMW,EAAAA,EAAAA,MAAML,EAAYG,EAAG,CAC7BT,SAAU,CAAC,uCAAuCa,EAAAA,EAAAA,KAAK,IAAK,CAC1Db,SAAU,cACR,0HACF,MAAMa,EAAAA,EAAAA,KAAKP,EAAYG,EAAG,CAC5BT,SAAU,kQACR,MAAMW,EAAAA,EAAAA,MAAML,EAAYG,EAAG,CAC7BT,SAAU,EAACa,EAAAA,EAAAA,KAAK,IAAK,CACnBb,SAAU,4BACR,mDACF,MAAMa,EAAAA,EAAAA,KAAKP,EAAYG,EAAG,CAC5BT,SAAU,ySACR,MAAMW,EAAAA,EAAAA,MAAML,EAAYG,EAAG,CAC7BT,SAAU,EAACa,EAAAA,EAAAA,KAAK,IAAK,CACnBb,SAAU,qCACR,mCAAmCa,EAAAA,EAAAA,KAAK,IAAK,CAC/Cb,SAAU,uBACR,6DAGV,CAOA,MANA,SAAoBK,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOS,QAASC,GAAaR,OAAOC,OAAO,CAAC,GAAGE,EAAAA,EAAAA,MAAsBL,EAAMX,YAC3E,OAAOqB,GAAYF,EAAAA,EAAAA,KAAKE,EAAWR,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DL,UAAUa,EAAAA,EAAAA,KAAKT,EAAmBC,MAC9BD,EAAkBC,EAC1B,E,8BChCO,MAAMW,EAAOlB,IAAA,IAAEmB,MAAOC,SAAS,KAACC,KAAOrB,EAAA,OAAKsB,EAAAA,cAAoBC,EAAAA,EAAU,CAC/EF,KAAMA,GACN,EACIG,EAAcC,IAAiC,IAAhC,SAACvB,EAAUiB,MAAM,QAACC,IAASK,EAC9C,MAAM,KAACJ,EAAI,IAAEK,GAAON,EACpB,OAAOE,EAAAA,cAAoBK,EAAAA,EAAU,CACnCN,KAAMA,EACNO,SAAUF,EAAIG,gBAAgBC,OAC7BR,EAAAA,cAAoBS,EAAAA,EAASX,EAASlB,GAAU,EAGtC,SAAS8B,EAAiBzB,GACvC,OAAOe,EAAAA,cAAoBE,EAAajB,EAAOe,EAAAA,cAAoBW,EAAqB1B,GAC1F,C,uDCjBO,MAAMwB,EAAU/B,IAAA,IAAC,SAAEE,GAAUF,EAAA,OAAKE,CAAQ,C","sources":["webpack://words-to-kick-your-teeth-out/./node_modules/@mdx-js/react/lib/index.js","webpack://words-to-kick-your-teeth-out/./content/blog/prose/2022-11-15-my-owners-lover.mdx","webpack://words-to-kick-your-teeth-out/./src/templates/post-mdx.jsx","webpack://words-to-kick-your-teeth-out/./src/features/post/post-mdx.jsx"],"sourcesContent":["/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react';\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({});\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent;\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components);\n    return React.createElement(Component, {\n      ...props,\n      allComponents\n    });\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext);\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents);\n    }\n    return {\n      ...contextComponents,\n      ...components\n    };\n  }, [contextComponents, components]);\n}\n\n/** @type {Components} */\nconst emptyObject = {};\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider(_ref) {\n  let {\n    components,\n    children,\n    disableParentContext\n  } = _ref;\n  /** @type {Components} */\n  let allComponents;\n  if (disableParentContext) {\n    allComponents = typeof components === 'function' ? components({}) : components || emptyObject;\n  } else {\n    allComponents = useMDXComponents(components);\n  }\n  return React.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, children);\n}","/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"My name is Silk and I am a hamster. I am a woman and I have pale cream\\ncolored fur. Being a hamster I am a solitary sort but I actually like\\nmy owner. The only thing is I wish my owner and her lover wouldn't\\nhave such loud and annoying sex.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Have you ever heard a woman scream \", _jsx(\"q\", {\n        children: \"scootaloo\"\n      }), \" during an orgasm? Or\\nhear your owner poke her lover's tits for ten minutes straight saying\\nbeep, boop, beep boop?\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Today I was curled up in my little coconut shell closet nibbling on a\\nlightly fermented pumpkin seed while my owner and her lover were\\nhaving dinner. They were having spaghetti with ground beef. I had a\\ncraving for mealworms but all I had were seeds.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(\"q\", {\n        children: \"Quick cover Silk's eyes\"\n      }), \" my owner yelled and I knew I was in trouble.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"A quick peek out of my hut and it seemed as if my owner had spilled\\nspaghetti across her lover's prodigious chest but in the process of\\nmopping things up had entangled themselves onto the floor. Whereupon\\nmy owner's lover proceeded to mime playing a guitar while stroking my\\nowner's clit.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(\"q\", {\n        children: \"rum pum pum pum, rum pum pum pum\"\n      }), \" my owner sung to the tune of\\n\", _jsx(\"q\", {\n        children: \"Little Drummer Boy\"\n      }), \" while miming playing bongos with her lover's\\nchest.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/molly/Documents/repos/mstewartgallus.github.io/content/blog/prose/2022-11-15-my-owners-lover.mdx\";\nimport {graphql} from \"gatsby\";\nimport {PostHead, PostPage, PostMdx} from \"@features/post\";\nexport const Head = ({data: {postMdx: {post}}}) => React.createElement(PostHead, {\n  post: post\n});\nconst PostMdxPage = ({children, data: {postMdx}}) => {\n  const {post, mdx} = postMdx;\n  return React.createElement(PostPage, {\n    post: post,\n    headings: mdx.tableOfContents.items\n  }, React.createElement(PostMdx, postMdx, children));\n};\nPostMdxPage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostMdxPage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const pageQuery = graphql`\nquery PostMdxById($id: String!) {\n  postMdx(id: {eq:$id}) {\n    sourceInstanceName\n    relativePath\n    mdx {\n      tableOfContents(maxDepth: 2)\n    }\n  post {\n    slug\n    dateDisplay: date(formatString: \"YYYY-MM-DD\")\n    date: date(formatString: \"YYYY-MM-DDTHH:mmZ\")\n    description\n    title\n    subtitle\n    category\n    notice\n    tags\n    places\n    people\n    author {\n      name\n      url\n    }\n    comments {\n      host\n      id\n    }\n    childrenLink {\n      category\n      next {\n        post {\n          slug\n          title\n        }\n      }\n      previous {\n        post {\n          slug\n          title\n        }\n      }\n    }\n  }\n  }\n}\n`;\n","export const PostMdx = ({ children }) => children;\n"],"names":["MDXContext","useMDXComponents","components","contextComponents","emptyObject","MDXProvider","_ref","allComponents","children","disableParentContext","Provider","value","_createMdxContent","props","_components","Object","assign","p","_provideComponents","_jsxs","_Fragment","_jsx","wrapper","MDXLayout","Head","data","postMdx","post","React","PostHead","PostMdxPage","_ref2","mdx","PostPage","headings","tableOfContents","items","PostMdx","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}