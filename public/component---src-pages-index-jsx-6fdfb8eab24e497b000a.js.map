{"version":3,"file":"component---src-pages-index-jsx-6fdfb8eab24e497b000a.js","mappings":"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","sources":["webpack://words-to-kick-your-teeth-out/./src/components/json-ld.jsx","webpack://words-to-kick-your-teeth-out/./src/components/seo-basic.jsx","webpack://words-to-kick-your-teeth-out/./src/hooks/use-opengraph.js","webpack://words-to-kick-your-teeth-out/./src/features/route/use-search-url.js","webpack://words-to-kick-your-teeth-out/./src/features/ui/subheading/index.jsx","webpack://words-to-kick-your-teeth-out/./src/features/ui/subheading/subheading.module.css","webpack://words-to-kick-your-teeth-out/./src/hooks/use-absolute.js","webpack://words-to-kick-your-teeth-out/./src/hooks/use-site-metadata.js","webpack://words-to-kick-your-teeth-out/./src/features/index/use-posts.js","webpack://words-to-kick-your-teeth-out/./src/features/index/use-post-list.js","webpack://words-to-kick-your-teeth-out/./src/features/index/banner.jsx","webpack://words-to-kick-your-teeth-out/./src/features/index/search-form/index.jsx","webpack://words-to-kick-your-teeth-out/./src/features/index/search-form/search-form.module.css","webpack://words-to-kick-your-teeth-out/./src/features/index/post-list.jsx","webpack://words-to-kick-your-teeth-out/./src/pages/index.jsx","webpack://words-to-kick-your-teeth-out/./src/features/index/use-website.js","webpack://words-to-kick-your-teeth-out/./src/utils/flatten.js"],"sourcesContent":["import { useMemo } from \"react\";\n\nexport const JsonLd = ({srcdoc}) => {\n    const json = useMemo(() => JSON.stringify(srcdoc), [srcdoc]);\n    return <script type=\"application/ld+json\">{json}</script>;\n};\n","import { flatten } from \"../utils/flatten.js\";\nimport { useSiteMetadata } from '../hooks/use-site-metadata.js';\nimport { useOpenGraph } from '../hooks/use-opengraph.js';\n\nconst Open = props => {\n    const json = useOpenGraph(props);\n\n    return Array.from((function* (){\n        for (const [ix, k, v] of flatten(json)) {\n            yield <meta key={ix} property={k} content={v} />;\n        }\n    })());\n};\n\nexport const SeoBasic = props => {\n    const {description, url} = props;\n    const site = useSiteMetadata();\n    return <>\n               {url && <link rel=\"canonical\" href={url} /> }\n               <meta name=\"description\" content={description ?? site.description} />\n               <Open {...props} />\n           </>;\n};\n","import { useMemo } from 'react';\nimport { useSiteMetadata } from './use-site-metadata.js';\n\nexport const useOpenGraph = ({description, url, title}) => {\n    const site = useSiteMetadata();\n    return useMemo(() => {\n        return {\n            og: {\n                site_name: site.title,\n                title,\n                description: description ?? site.description,\n                url\n            }\n        };\n    }, [site, description, url, title]);\n};\n","import { useMemo } from 'react';\nimport { withPrefix } from \"gatsby\";\n\nconst path = \"/search\";\n\nconst lb = (label, xs = []) => xs.map(x => [label, x]);\n\nexport const useSearchURL = xs => {\n    const {s, category, tag, place, person} = xs ?? {};\n    return useMemo(() => {\n        const opts = [\n            ...(s ? ['s', s] : []),\n            ...lb('category', category),\n            ...lb('tag', tag),\n            ...lb('place', place),\n            ...lb('person', person)\n        ];\n\n        const p = String(new URLSearchParams(opts));\n        const y =  p === '' ? path : `${path}?${p}` ;\n        return withPrefix(y);\n    }, [s, category, tag, place, person]);\n};\n","import { withClass } from \"@features/util\";\nimport { p } from \"./subheading.module.css\";\n\nexport const Subheading = withClass('p', p);\n","// extracted by mini-css-extract-plugin\nexport var p = \"subheading-module--p--b5186\";","import { graphql, useStaticQuery } from \"gatsby\";\nimport { useMemo } from \"react\";\n\nconst useMetadata = () => useStaticQuery(graphql`\nquery {\n  site {\n    siteMetadata {\n      siteUrl\n    }\n  }\n}`);\n\nexport const useAbsolute = pathname => {\n    const raw = useMetadata();\n    return useMemo(() => {\n        const site = raw.site.siteMetadata;\n        return String(new URL(pathname, site.siteUrl));\n    }, [raw, pathname]);\n};\n","import { graphql, useStaticQuery } from \"gatsby\";\n\nconst useSiteMetadataRaw = () => useStaticQuery(graphql`\nquery {\n  site {\n    siteMetadata {\n      title\n      description\n    }\n  }\n}`);\n\nexport const useSiteMetadata = () => useSiteMetadataRaw().site.siteMetadata;\n","import { useMemo } from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\n\nconst usePostsRaw = () => useStaticQuery(graphql`\nquery UsePosts {\n  allLink(sort: {post: {date: DESC}}, filter: {category: {eq: \"\"}}) {\n    nodes {\n      post {\n        title\n        slug\n      }\n    }\n  }\n}`);\n\nexport const usePosts = () => {\n    const raw = usePostsRaw();\n    return useMemo(() => raw.allLink.nodes.map(p => p.post), [raw]);\n}\n","import { useMemo } from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\n\nconst usePostListRaw = () => useStaticQuery(graphql`\nquery UsePostList {\n  allLink(sort: {post: {date: DESC}}, filter: {category: {ne: \"\"}}) {\n    group(field: {category: SELECT}) {\n      category: fieldValue\n      nodes {\n        post {\n          title\n          slug\n        }\n      }\n    }\n  }\n}`);\n\nexport const usePostList = () => {\n    const raw = usePostListRaw();\n    return useMemo(() =>\n        Object.fromEntries(\n            raw.allLink.group\n                .map(({ category, nodes }) =>\n                    [category, nodes.map(l => l.post)])),\n        [raw]);\n}\n","import { A, ClickTrap, Ul, Li } from \"@features/ui\";\n\nexport const Banner = () =>\n<Ul>\n    <Li><A download=\"feed.xml\" rel=\"alternate\" href=\"/feed.xml\">Subscribe (RSS)<ClickTrap /></A></Li>\n    <Li><A rel=\"author\" href=\"/about/\">About the Author<ClickTrap /></A></Li>\n    <Li><A href=\"/README\">About this Blog<ClickTrap /></A></Li>\n</Ul>;\n","import { useId } from \"react\";\nimport { Input, Button } from \"@features/ui\";\nimport { query } from \"./search-form.module.css\";\n\nexport const SearchForm = ({action, onSubmit}) => {\n    const id = useId();\n\n    return <form rel=\"search\" action={action} onSubmit={onSubmit}>\n               <fieldset className={query}>\n                   <label htmlFor={id}>Query</label>\n                   <Input id={id} name=\"s\" type=\"search\" required />\n                   <Button type=\"submit\">Search</Button>\n               </fieldset>\n           </form>;\n};\n","// extracted by mini-css-extract-plugin\nexport var query = \"search-form-module--query--650cb\";","import { BlockA, ClickTrap, Ol, Li } from \"@features/ui\";\n\nconst Entry = ({href, children}) =>\n<Li>\n    <BlockA href={href}>\n        {children}\n        <ClickTrap />\n    </BlockA>\n</Li>;\n\nconst Posts = ({posts}) => posts.map(({ slug, title }) =>\n    <Entry key={slug} href={slug}>{title}</Entry>\n);\n\nexport const PostList = ({posts}) =>\nposts && posts.length > 0 &&\n    <Ol reversed=\"reversed\" start={posts.length}>\n        <Posts posts={posts} />\n    </Ol>;\n","import { useId } from \"react\";\nimport { useLocation } from \"@gatsbyjs/reach-router\";\nimport {\n    SearchForm,\n    Banner,\n    PostList,\n    usePostList, usePosts, useWebsite\n} from \"@features/index\";\nimport { useSearchURL } from \"@features/route\";\nimport {\n    A,\n    BreadcrumbList, BreadcrumbItem,\n    Card,\n    H2A,\n    Header,\n    Hgroup,\n    Subheading,\n    Ul,\n    Li\n} from \"@features/ui\";\nimport { ScreenOnly, useSubmit } from \"@features/util\";\nimport { ViewportPage } from \"@features/page\";\nimport { Search } from \"@features/polyfill\";\nimport { JsonLd } from \"../components/json-ld.jsx\";\nimport { SeoBasic } from \"../components/seo-basic.jsx\";\nimport { useTitle } from \"../components/title.jsx\";\nimport { useAbsolute } from \"../hooks/use-absolute.js\";\nimport { useSiteMetadata } from \"../hooks/use-site-metadata.js\";\n\nconst title = \"Posts\";\n\nconst Seo = () => {\n    const { pathname } = useLocation();\n    const url = useAbsolute(pathname);\n    return <SeoBasic title={title} url={url} />;\n};\n\nexport const Head = () => {\n    const json = useWebsite();\n    const fulltitle = useTitle(title);\n    return <>\n               <title>{fulltitle}</title>\n               <link type=\"application/atom+xml\" rel=\"alternate\" href=\"/feed.xml\" />\n               <Seo />\n               <JsonLd srcdoc={json} />\n           </>;\n};\n\nconst IndexPage = () => {\n    const posts = usePosts();\n    const { title, description } = useSiteMetadata();\n    const onSubmit = useSubmit();\n    const search = useSearchURL();\n    const postsByCategory = usePostList();\n    const id = useId();\n    const navId = useId();\n    return <ViewportPage\n               support={\n                   <header aria-describedby={id}>\n                       <Card>\n                           <Hgroup id={id}>\n                               <H2A id=\"common\">{title}</H2A>\n                               <Subheading>{description}</Subheading>\n                           </Hgroup>\n                           <Banner />\n                       </Card>\n                   </header>\n               }\n               navigation={\n                   <ScreenOnly>\n                       <Search aria-describedby=\"search\">\n                           <Card>\n                               <Header>\n                                   <Hgroup>\n                                       <H2A id=\"search\">Search</H2A>\n                                   </Hgroup>\n                               </Header>\n                               <SearchForm action={search} onSubmit={onSubmit} />\n                           </Card>\n                       </Search>\n                   </ScreenOnly>\n               }\n               breadcrumbs={\n                   <BreadcrumbList>\n                       <BreadcrumbItem>\n                           <span aria-current=\"page\">Home</span>\n                       </BreadcrumbItem>\n                   </BreadcrumbList>\n               }\n               mainbar={\n                   Object.entries(postsByCategory).map(([category, p]) =>\n                       <nav key={category} aria-labelledby={category}>\n                           <Card>\n                               <header>\n                                   <Hgroup>\n                                       <H2A id={category}>\n                                           {category}\n                                       </H2A>\n                                   </Hgroup>\n                               </header>\n                               <PostList posts={p} />\n                           </Card>\n                       </nav>\n                   )\n               }\n\n               heading=\"Posts\"\n           >\n               <nav aria-labelledby={navId}>\n                   <span id={navId}>Categories</span>\n                   <Ul>\n                       {\n                           Object.keys(postsByCategory).map(category =>\n                               <Li key={category}>\n                                   <A href={`#` + category}>{category}</A>\n                               </Li>)\n                       }\n                   </Ul>\n               </nav>\n               <PostList posts={posts} />\n           </ViewportPage>;\n};\n\n\nexport default IndexPage;\n","import { useMemo } from \"react\";\nimport { useAbsolute } from \"../../hooks/use-absolute.js\";\nimport { useSiteMetadata } from \"../../hooks/use-site-metadata.js\";\n\nexport const useWebsite = () => {\n    const site = useSiteMetadata();\n    const search = useAbsolute('/search');\n    const index = useAbsolute('/');\n    return useMemo(() => ({\n        \"@context\": \"https://schema.org\",\n        \"@type\": \"WebSite\",\n        \"name\": site.title,\n        \"description\": site.description,\n        \"url\": index,\n        \"potentialAction\": {\n            \"@type\": \"SearchAction\",\n            \"target\": {\n                \"@type\": \"EntryPoint\",\n                \"urlTemplate\": `${search}?s={s}`\n            },\n            \"query-input\": \"required name=s\"\n        }\n    }), [site, search, index]);\n};\n","const loop = function *loop(ix, key, value) {\n    if (typeof value === 'string') {\n        yield [ix, key, value];\n        return;\n    }\n\n    if (Array.isArray(value)) {\n        let ii = 0;\n        for (const x of value) {\n            for (const l of loop(`${ix}${ii}`, key, x)) {\n                yield l;\n            }\n            ++ii;\n        }\n        return;\n    }\n\n    for (const [k, v] of Object.entries(value)) {\n        const prop = key ? `${key}:${k}` : k ;\n        const newix = key ? `${ix}:${k}` : k ;\n        for (const l of loop(newix, prop, v)) {\n            yield l;\n        }\n    }\n};\n\nexport const flatten = function*(value) {\n    for (const l of loop(null, null, value)) {\n        yield l;\n    }\n};\n"],"names":["JsonLd","_ref","srcdoc","json","useMemo","JSON","stringify","_jsx","type","children","Open","props","description","url","title","site","useSiteMetadata","og","site_name","useOpenGraph","Array","from","ix","k","v","flatten","property","content","SeoBasic","_jsxs","_Fragment","rel","href","name","path","lb","label","xs","map","x","useSearchURL","s","category","tag","place","person","opts","concat","_toConsumableArray","p","String","URLSearchParams","y","withPrefix","Subheading","withClass","useAbsolute","pathname","raw","useStaticQuery","siteMetadata","URL","siteUrl","usePosts","allLink","nodes","post","usePostList","Object","fromEntries","group","l","Banner","Ul","Li","A","download","ClickTrap","SearchForm","action","onSubmit","id","useId","className","htmlFor","Input","required","Button","Entry","BlockA","Posts","_ref2","posts","_ref3","slug","PostList","_ref4","length","Ol","reversed","start","Seo","useLocation","Head","useWebsite","search","index","fulltitle","useTitle","IndexPage","useSubmit","postsByCategory","navId","ViewportPage","support","Card","Hgroup","H2A","navigation","ScreenOnly","Search","Header","breadcrumbs","BreadcrumbList","BreadcrumbItem","mainbar","entries","heading","keys","loop","key","value","isArray","ii","prop","newix"],"sourceRoot":""}