{"version":3,"file":"component---src-pages-post-poem-post-slug-jsx-9697b464160dbe1cbb72.js","mappings":"6QAAO,MAAMA,EAAMC,IAAA,IAAC,SAAEC,GAAUD,EAAA,OAChCE,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAF,SAAGA,GAAY,E,wBCEf,MAAMG,EAAMC,GAAKC,EAAAA,SAAAA,IAAMD,GAAGE,GAAKA,IAEzBC,EAAOR,IAAA,IAAC,KAAES,GAAMT,EAAA,OAChBI,EAAIK,EAAKC,KAAI,CAACC,EAASC,KACnBC,EAAAA,EAAAA,MAAAV,EAAAA,SAAA,CAAAF,SAAA,CACKW,EAAQ,IAAKV,EAAAA,EAAAA,KAACY,EAAAA,EAAO,KACtBZ,EAAAA,EAAAA,KAACH,EAAG,CAAAE,SAAEU,SACL,EAETI,EAASC,IAAA,IAAC,OAAEC,GAAQD,EAAA,OACpBZ,EAAIa,EAAOP,KAAID,IACXP,EAAAA,EAAAA,KAACgB,EAAAA,EAAC,CAAAjB,UACEC,EAAAA,EAAAA,KAACM,EAAI,CAACC,KAAMA,QACV,EAGHU,EAAOC,IAAA,IAAC,KAAEC,GAAMD,EAAA,OAC7BhB,EAAIiB,EAAKX,KAAIO,IACTf,EAAAA,EAAAA,KAACoB,EAAAA,GAAE,CAAArB,UACCC,EAAAA,EAAAA,KAACa,EAAM,CAACE,OAAQA,QACb,ECrBEM,EAAWvB,IAAA,IACpBqB,MAAM,QAAEG,IACXxB,EAAA,OAAKE,EAAAA,EAAAA,KAACiB,EAAI,CAACE,KAAMG,GAAW,ECDhBC,EAAOzB,IAAA,IAAG0B,MAAQC,UAAU,KAAEC,KAAQ5B,EAAA,OAAKE,EAAAA,EAAAA,KAAC2B,EAAAA,EAAQ,CAACD,KAAMA,GAAQ,EAShF,MAPqBZ,IAA6B,IAA1BU,MAAM,SAAEC,IAAYX,EACxC,MAAM,KAAEY,EAAI,KAAEP,GAASM,EACvB,OAAOzB,EAAAA,EAAAA,KAAC4B,EAAAA,EAAQ,CAACF,KAAMA,EAAK3B,UACjBC,EAAAA,EAAAA,KAACqB,EAAQ,CAACK,KAAMA,EAAMP,KAAMA,KACrB,C","sources":["webpack://words-to-kick-your-teeth-out/./src/features/poem/seg.jsx","webpack://words-to-kick-your-teeth-out/./src/features/post/poem.jsx","webpack://words-to-kick-your-teeth-out/./src/features/post/post-poem.jsx","webpack://words-to-kick-your-teeth-out/./src/pages/{PostPoem.post__slug}.jsx"],"sourcesContent":["export const Seg = ({ children }) =>\n<>{children}</>;\n","import { Children as C } from \"react\";\nimport { Caesura, L, Lg, Seg } from \"@features/poem\";\n\nconst key = x => C.map(x, y => y);\n\nconst Line = ({ line }) =>\n      key(line.map((segment, segno) =>\n          <>\n              {segno > 0 && <Caesura />}\n              <Seg>{segment}</Seg>\n          </>));\n\nconst Stanza = ({ stanza }) =>\n      key(stanza.map(line =>\n          <L>\n              <Line line={line} />\n          </L>));\n\n// FIXME has to be a better method of keying\nexport const Poem = ({ poem }) =>\nkey(poem.map(stanza =>\n    <Lg>\n        <Stanza stanza={stanza} />\n    </Lg>));\n\n","import { Poem } from \"./poem.jsx\";\n\nexport const PostPoem = ({\n    poem: { content }\n}) => <Poem poem={content} />;\n","import { graphql } from \"gatsby\";\nimport { PostHead, PostPage, PostPoem } from \"@features/post\";\n\nexport const Head = ({ data: { postPoem: { post }}}) => <PostHead post={post} />;\n\nconst PostPoemPage = ({ data: { postPoem } }) => {\n    const { post, poem } = postPoem;\n    return <PostPage post={post}>\n               <PostPoem post={post} poem={poem} />\n           </PostPage>;\n};\n\nexport default PostPoemPage;\n\nexport const pageQuery = graphql`\nquery PostPoemById($id: String!) {\n  postPoem(id: {eq:$id}) {\n    poem {\n      content\n    }\n  post {\n    slug\n    dateDisplay: date(formatString: \"YYYY-MM-DD\")\n    date: date(formatString: \"YYYY-MM-DDTHH:mmZ\")\n    description\n    title\n    subtitle\n    category\n    notice\n    tags\n    places\n    people\n    author {\n      name\n      url\n    }\n    comments {\n      host\n      id\n    }\n    childrenLink {\n      category\n      next {\n        post {\n          slug\n          title\n        }\n      }\n      previous {\n        post {\n          slug\n          title\n        }\n      }\n    }\n  }\n}\n}\n`;\n"],"names":["Seg","_ref","children","_jsx","_Fragment","key","x","C","y","Line","line","map","segment","segno","_jsxs","Caesura","Stanza","_ref2","stanza","L","Poem","_ref3","poem","Lg","PostPoem","content","Head","data","postPoem","post","PostHead","PostPage"],"sourceRoot":""}