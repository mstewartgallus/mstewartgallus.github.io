{"version":3,"file":"component---src-pages-index-jsx-ed23e260f4f21e355e12.js","mappings":"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","sources":["webpack://words-to-kick-your-teeth-out/./src/components/json-ld.jsx","webpack://words-to-kick-your-teeth-out/./src/components/search.jsx","webpack://words-to-kick-your-teeth-out/./src/components/search.module.css","webpack://words-to-kick-your-teeth-out/./src/hooks/use-index-all.js","webpack://words-to-kick-your-teeth-out/./src/hooks/use-submit.js","webpack://words-to-kick-your-teeth-out/./src/components/banner.jsx","webpack://words-to-kick-your-teeth-out/./src/components/header.jsx","webpack://words-to-kick-your-teeth-out/./src/components/post-list.jsx","webpack://words-to-kick-your-teeth-out/./src/components/search-form.jsx","webpack://words-to-kick-your-teeth-out/./src/components/search-form.module.css","webpack://words-to-kick-your-teeth-out/./src/hooks/use-index-category.js","webpack://words-to-kick-your-teeth-out/./src/hooks/use-post-list.js","webpack://words-to-kick-your-teeth-out/./src/hooks/use-website.js","webpack://words-to-kick-your-teeth-out/./src/pages/index.jsx"],"sourcesContent":["import { Script } from \"gatsby\";\n\nexport const JsonLd = ({srcdoc}) => {\n    const json = JSON.stringify(srcdoc);\n    return <Script type=\"application/ld+json\">{json}</Script>;\n};\n\nexport default JsonLd;\n","import * as React from \"react\";\nimport { search } from \"./search.module.css\";\n\nexport const Search = ({heading, children}) => {\n    const id = React.useId();\n\n    return <section className={search} aria-describedby={id}\n                 role=\"search\">\n               <header className=\"sr-only\">\n                   <hgroup id={id}>\n                       {heading}\n                   </hgroup>\n               </header>\n\n               {children}\n           </section>;\n};\n\nexport default Search;\n","// extracted by mini-css-extract-plugin\nexport var query = \"search-module--query--42c00\";\nexport var search = \"search-module--search--ed73a\";","import { graphql, useStaticQuery } from \"gatsby\";\n\nconst useIndexAllRaw = () => useStaticQuery(graphql`\nquery UseIndexAll {\n  indexAll {\n    index {\n      id\n    }\n  }\n}`);\n\nexport const useIndexAll = () => useIndexAllRaw().indexAll.index.id;\n\nexport default useIndexAll;\n","import * as React from \"react\";\nimport { navigate } from \"gatsby\";\n\nexport const useSubmit = () => {\n    return React.useCallback(async event => {\n        const nativeEvent = event.nativeEvent;\n        const form = event.target;\n        const submitter = nativeEvent.submitter;\n\n        let action = submitter.getAttribute('formaction');\n        let enctype = submitter.getAttribute('formenctype');\n        let method = submitter.getAttribute('formmethod');\n        let target = submitter.getAttribute('formtarget');\n\n        action ??= form.getAttribute('action');\n        enctype ??= form.getAttribute('enctype');\n        method ??= form.method;\n        target ??= form.getAttribute('target');\n\n        if (enctype !== null) {\n            return;\n        }\n        if (method !== 'get') {\n            return;\n        }\n        if (target !== null) {\n            return;\n        }\n\n        event.preventDefault();\n\n        const search = new URLSearchParams(new FormData(form));\n\n        const url = `${action}?${search}`;\n\n        // FIXME what if external url ?\n        await navigate(url);\n    }, []);\n};\n\nexport default useSubmit;\n","import A from \"./a.jsx\";\n\nexport const Banner = () =>\n<ul>\n    <li><a type=\"application/atom+xml\" rel=\"alternate\" href=\"/feed.xml\">Subscribe</a></li>\n    <li><A rel=\"author\" href=\"/about\">About the Author</A></li>\n</ul>;\n\nexport default Banner;\n","import * as React from \"react\";\n\nexport const Header = ({ children, heading, ...props }) => {\n    const id = React.useId();\n    return <header {...props} aria-describedby={id}>\n               <hgroup id={id}>\n                   {heading}\n               </hgroup>\n               {children}\n           </header>;\n};\n\nexport default Header;\n","import A from \"./a.jsx\";\n\nconst Posts = ({posts}) =>\n      posts.map(({ slug, title }) =>\n          <li key={slug}>\n              <A href={slug}>{title}</A>\n          </li>);\n\nexport const PostList = ({posts}) =>\nposts && posts.length > 0 &&\n    <ol reversed>\n        <Posts posts={posts} />\n    </ol>;\n\nexport default PostList;\n","import * as React from \"react\";\nimport { useSubmit } from \"../hooks/use-submit.js\";\nimport { query } from \"./search-form.module.css\";\n\nexport const SearchForm = () => {\n    const id = React.useId();\n    const onSubmit = useSubmit();\n\n    return <form rel=\"search\" action=\"/search\"\n                 onSubmit={onSubmit}>\n               <div className={query}>\n                   <label htmlFor={id}>Query</label>\n                   <input id={id} name=\"s\" type=\"search\" required />\n                   <button type=\"submit\">Search</button>\n               </div>\n           </form>;\n};\n\nexport default SearchForm;\n","// extracted by mini-css-extract-plugin\nexport var query = \"search-form-module--query--ac79d\";","import { graphql, useStaticQuery } from \"gatsby\";\nimport * as React from \"react\";\n\nconst useIndexCategoryRaw = () => useStaticQuery(graphql`\nquery UseIndexCategory {\n  allIndexCategory(sort: {category: DESC}) {\n    nodes {\n      index {\n        id\n      }\n      category\n    }\n  }\n}`);\n\nexport const useIndexCategory = () => {\n    const raw = useIndexCategoryRaw();\n    return React.useMemo(() => {\n        const indices = raw.allIndexCategory.nodes;\n        return Object.fromEntries(indices.map(({index: { id }, category}) => [category, id]))\n    }, [raw]);\n};\n\nexport default useIndexCategory;\n","import { graphql, useStaticQuery } from \"gatsby\";\nimport * as React from \"react\";\n\nconst usePostListRaw = () => useStaticQuery(graphql`\nquery UsePostList {\n  allLink(sort: {post: {date: DESC}}) {\n    group(field: {index: {id: SELECT}}) {\n      index: fieldValue\n      nodes {\n        post {\n          title\n          slug\n        }\n      }\n    }\n  }\n}`);\n\nexport const usePostList = () => {\n    const raw = usePostListRaw();\n    return React.useMemo(() =>\n        Object.fromEntries(\n            raw.allLink.group\n                .map(({ index, nodes }) =>\n                    [index, nodes.map(l => l.post)])),\n        [raw]);\n}\n\nexport default usePostList;\n","import * as React from \"react\";\nimport useAbsolute from \"../hooks/use-absolute.js\";\nimport useSiteMetadata from \"../hooks/use-site-metadata.js\";\n\nexport const useWebsite = () => {\n    const site = useSiteMetadata();\n    const search = useAbsolute('/search');\n    const index = useAbsolute('/');\n    return React.useMemo(() => ({\n        \"@context\": \"https://schema.org\",\n        \"@type\": \"WebSite\",\n        \"name\": site.title,\n        \"description\": site.description,\n        \"url\": index,\n        \"potentialAction\": {\n            \"@type\": \"SearchAction\",\n            \"target\": {\n                \"@type\": \"EntryPoint\",\n                \"urlTemplate\": `${search}?s={s}`\n            },\n            \"query-input\": \"required name=s\"\n        }\n    }), [site, search, index]);\n};\n\nexport default useWebsite;\n","import * as React from \"react\";\nimport Banner from \"../components/banner.jsx\";\nimport BreadcrumbList from \"../components/breadcrumb-list.jsx\";\nimport HeadBasic from \"../components/head-basic.jsx\";\nimport Header from \"../components/header.jsx\";\nimport JsonLd from \"../components/json-ld.jsx\";\nimport Nav from \"../components/nav.jsx\";\nimport Page from \"../components/page.jsx\";\nimport PostList from \"../components/post-list.jsx\";\nimport SearchForm from \"../components/search-form.jsx\";\nimport Search from \"../components/search.jsx\";\nimport SeoBasic from \"../components/seo-basic.jsx\";\nimport Title from \"../components/title.jsx\";\nimport useAbsolute from \"../hooks/use-absolute.js\";\nimport useIndexAll from \"../hooks/use-index-all.js\";\nimport useIndexCategory from \"../hooks/use-index-category.js\";\nimport usePostList from \"../hooks/use-post-list.js\";\nimport useSiteMetadata from \"../hooks/use-site-metadata.js\";\nimport useWebsite from \"../hooks/use-website.js\";\n\nconst title = \"Table of Contents\";\n\nconst Sidebar = () => {\n    const { title, description } = useSiteMetadata();\n\n    return <>\n               <Header\n                   heading={\n                       <>\n                           <h2>{title}</h2>\n                           <p>{description}</p>\n                       </>}>\n                   <Banner />\n               </Header>\n               <Search heading={<h2>Search</h2>}>\n                   <SearchForm />\n               </Search>\n               <Nav heading={<h2>Breadcrumbs</h2>}>\n                   <BreadcrumbList>\n                       <li aria-current=\"page\">Home</li>\n                   </BreadcrumbList>\n               </Nav>\n           </>;\n};\n\nconst Foot = () => {\n    const json = useWebsite();\n    return <JsonLd srcdoc={json} />;\n};\n\nexport const Head = ({location: {pathname}}) => {\n    const url = useAbsolute(pathname);\n    return <>\n               <HeadBasic />\n               <Title>{title}</Title>\n               <link type=\"application/atom+xml\" rel=\"alternate\" href=\"/feed.xml\" />\n               <SeoBasic title={title} url={url} />\n           </>;\n};\n\nconst IndexPage = () => {\n    const indices = usePostList();\n    const indexAll = useIndexAll();\n    const indexCategory = useIndexCategory();\n    const allPosts = indices[indexAll];\n    const postsByCategory =\n          Object.entries(indexCategory)\n          .map(([category, id]) => [category, indices[id]]);\n\n    return <>\n               <Page heading={<h1 tabIndex=\"-1\">Posts</h1>}\n                     sidebar={<Sidebar />}\n               >\n                   <PostList posts={allPosts} />\n\n                   {\n                       postsByCategory.map(([category, posts]) =>\n                           <React.Fragment key={category}>\n                               <h2>{category}</h2>\n                               <PostList posts={posts} />\n                           </React.Fragment>)\n                   }\n               </Page>\n               <Foot />\n    </>;\n};\n\nexport default IndexPage;\n"],"names":["srcdoc","json","JSON","stringify","type","heading","children","id","React","className","role","useStaticQuery","indexAll","index","useSubmit","async","nativeEvent","event","form","target","submitter","action","getAttribute","enctype","method","preventDefault","url","URLSearchParams","FormData","navigate","rel","href","props","Posts","posts","map","slug","title","length","reversed","onSubmit","htmlFor","name","required","raw","indices","allIndexCategory","nodes","Object","fromEntries","category","allLink","group","l","post","site","useSiteMetadata","search","useAbsolute","description","Sidebar","Foot","useWebsite","Head","location","pathname","usePostList","useIndexAll","indexCategory","useIndexCategory","allPosts","postsByCategory","entries","tabIndex","sidebar"],"sourceRoot":""}