{"version":3,"file":"component---src-templates-post-jsx-f24978cbdddffc972fda.js","mappings":"4SAaA,MAAMA,EAAS,CACXC,KAAM,mBACNC,IAAK,WAYHC,EAAW,IAA6B,IAA5B,SAAEC,EAAQ,SAAEC,GAAU,EACpC,MAAMC,GAAaC,EAAAA,EAAAA,GAAiBF,GACpC,OAAO,gBAAC,KAAW,CAACC,WAAYA,GAAaF,EAAuB,EAGlEI,EAAU,IAA+C,IAA9C,SAAEJ,EAAQ,WAAEK,EAAU,SAAEC,EAAQ,KAAEC,GAAM,EACrD,OAAQF,GACR,IAAK,WACD,OAAO,gBAAC,IAAI,CAACE,KAAMA,EAAKC,UAE5B,IAAK,UACD,OAAO,gBAACT,EAAQ,CAACE,SAAUK,EAASL,UAAWD,GAEnD,QACI,MAAM,IAAIS,MAAM,gBAAgBJ,GAAc,EAIzCK,EAAO,IAAuC,IAApCC,MAAQC,MAAM,SAAEN,KAAc,EACjD,MAAM,YAAEO,EAAW,MAAEC,EAAK,KAAEC,GAAST,EAC/BR,GAAMkB,EAAAA,EAAAA,GAAYD,GACxB,OAAO,gCACI,gBAAC,IAAS,MACV,gBAAC,IAAK,KAAED,GACR,gBAAC,IAAQ,CAACD,YAAaA,EAAaC,MAAOA,EAAOhB,IAAKA,IACvD,gBAAC,IAAW,eAACF,OAAQA,GAAYU,IAClC,EAcd,UAXiB,IAAoC,IAAnC,SAAEN,EAAUW,MAAM,KAAEC,IAAQ,EAC1C,MAAM,aAAEK,EAAY,SAAEX,GAAaM,EACnC,OAAO,gCACI,gBAAC,IAAI,CAACM,QAzCCC,EAyCqBF,EAxCrCG,OAAOC,YAAYF,EAAMG,KAAI,gBAAC,MAC1BC,EAAK,SACLC,EAAQ,KAAEC,GACb,QAAK,CAACF,EAAMG,MAAO,CAChBF,SAAUA,SAAc,QAAN,EAARA,EAAUZ,YAAI,WAAN,EAAR,EAAgBN,SAC1BmB,KAAMA,SAAU,QAAN,EAAJA,EAAMb,YAAI,WAAN,EAAJ,EAAYN,UACpB,MAmCaA,SAAU,CAAEV,YAAWU,IACzB,gBAACF,EAAYQ,EAAOZ,IAExB,gBAAC,IAAW,eAACJ,OAAQA,GAAYU,KA7C1Ba,KA8CR,C","sources":["webpack://words-to-kick-your-teeth-out/./src/templates/post.jsx"],"sourcesContent":["import * as React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { MDXProvider } from \"@mdx-js/react\";\nimport HeadBasic from \"../components/head-basic.jsx\";\nimport Post from \"../components/post.jsx\";\nimport Poem from \"../components/poem.jsx\";\nimport SeoBasic from \"../components/seo-basic.jsx\";\nimport SeoPostFoot from \"../components/seo-post-foot.jsx\";\nimport SeoPostHead from \"../components/seo-post-head.jsx\";\nimport Title from \"../components/title.jsx\";\nimport useAbsolute from \"../hooks/use-absolute.js\";\nimport useMdxComponents from \"../hooks/use-mdx-components.js\";\n\nconst author = {\n    name: \"Molossus Spondee\",\n    url: \"/about/\"\n};\n\nconst pagingOfLinks = links =>\n      Object.fromEntries(links.map(({\n          index,\n          previous, next\n      }) => [index.label, {\n          previous: previous?.post?.metadata,\n          next: next?.post?.metadata\n      }]));\n\nconst Provider = ({ children, category }) => {\n    const components = useMdxComponents(category);\n    return <MDXProvider components={components}>{children}</MDXProvider>;\n};\n\nconst Content = ({ children, __typename, metadata, poem }) => {\n    switch (__typename) {\n    case \"PostPoem\":\n        return <Poem poem={poem.content} />;\n\n    case \"PostMdx\":\n        return <Provider category={metadata.category}>{children}</Provider>;\n\n    default:\n        throw new Error(`unknown type ${__typename}`);\n    }\n};\n\nexport const Head = ({ data: { post: { metadata } } }) => {\n    const { description, title, slug } = metadata;\n    const url = useAbsolute(slug);\n    return <>\n               <HeadBasic/>\n               <Title>{title}</Title>\n               <SeoBasic description={description} title={title} url={url} />\n               <SeoPostHead author={author} {...metadata} />\n           </>;\n};\n\nconst BlogPost = ({ children, data: { post } }) =>  {\n    const { childrenLink, metadata } = post;\n    return <>\n               <Post paging={pagingOfLinks(childrenLink)}\n                     metadata={{ author, ...metadata }}>\n                   <Content {...post}>{children}</Content>\n               </Post>\n               <SeoPostFoot author={author} {...metadata} />\n           </>;\n};\n\nexport default BlogPost;\n\nexport const pageQuery = graphql`\nquery BlogById($id: String!) {\n  post(id: {eq: $id}) {\n    __typename\n    childrenLink {\n      index {\n        label\n      }\n      previous {\n        post {\n          metadata {\n            slug\n            title\n          }\n        }\n      }\n      next {\n        post {\n          metadata {\n            slug\n            title\n          }\n        }\n      }\n    }\n    ... on PostPoem {\n      poem {\n        content\n      }\n    }\n    metadata {\n      slug\n      dateDisplay: date(formatString: \"YYYY-MM-DD\")\n      date: date(formatString: \"YYYY-MM-DDTHH:mmZ\")\n      description\n      title\n      subtitle\n      category\n      notice\n      tags\n      places\n      people\n    }\n  }\n}`;\n"],"names":["author","name","url","Provider","children","category","components","useMdxComponents","Content","__typename","metadata","poem","content","Error","Head","data","post","description","title","slug","useAbsolute","childrenLink","paging","links","Object","fromEntries","map","index","previous","next","label"],"sourceRoot":""}