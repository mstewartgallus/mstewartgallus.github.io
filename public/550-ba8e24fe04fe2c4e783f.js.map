{"version":3,"file":"550-ba8e24fe04fe2c4e783f.js","mappings":"8NAKA,MAAMA,EAAO,CAAEC,cAAc,EAAMC,eAAe,GAErCC,EAAQA,KACjB,MAAMC,GAAKC,EAAAA,EAAAA,MAOL,aAAEC,EAAcC,UAAU,KAAEC,EAAI,SAAEC,KAAeC,EAAAA,EAAAA,kBAAiBN,GAClEO,EAAeL,aAAY,EAAZA,EAAcG,SAwBnC,OAtBAG,EAAAA,EAAAA,YAAU,KACN,IAAKD,EACD,OAGJ,GAAIH,EAAM,CACN,MAAMK,EAAOC,SAASC,eAAeP,EAAKQ,MAAM,IAEhD,YADAH,SAAAA,EAAMI,MAAMjB,GAEhB,CAEA,GAAIW,IAAiBF,EACjB,OAGJ,MAAMS,GAAUC,EAAAA,EAAAA,KACXD,GAILA,EAAQD,MAAMjB,EAAK,GACpB,CAACW,EAAcF,EAAUD,IACrB,IAAI,EAGf,W","sources":["webpack://words-to-kick-your-teeth-out/./src/features/focus/focus.jsx"],"sourcesContent":["import { useDeferredValue, useEffect } from \"react\";\nimport { usePrevLocation } from \"./prev-location.js\";\nimport { getFocus } from \"./focus-ref.js\";\n\n// Gatsby already handles scroll, focus-visible for extra emphasis\nconst opts = { focusVisible: true, preventScroll: true };\n\nexport const Focus = () => {\n    const xs = usePrevLocation();\n    // Not sure if deferring focus here makes sense\n\n    // It's not great but at least sometimes we get the focusing\n    // happening a little bit AFTER the the view transition\n    // animations starts and we don't get forced reflow.\n\n    const { prevLocation, location: { hash, pathname } } = useDeferredValue(xs);\n    const prevPathname = prevLocation?.pathname;\n\n    useEffect(() => {\n        if (!prevPathname) {\n            return;\n        }\n\n        if (hash) {\n            const elem = document.getElementById(hash.slice(1));\n            elem?.focus(opts);\n            return;\n        }\n\n        if (prevPathname === pathname) {\n            return;\n        }\n\n        const current = getFocus();\n        if (!current) {\n            return;\n        }\n\n        current.focus(opts);\n    }, [prevPathname, pathname, hash]);\n    return null;\n};\n\nexport default Focus;\n"],"names":["opts","focusVisible","preventScroll","Focus","xs","usePrevLocation","prevLocation","location","hash","pathname","useDeferredValue","prevPathname","useEffect","elem","document","getElementById","slice","focus","current","getFocus"],"sourceRoot":""}