{"version":3,"file":"399-23d1a1b5a676a72e9cd7.js","mappings":"qRAIA,MAAMA,EAAUC,IAAA,IAAC,SAACC,EAAQ,GAAEC,EAAE,KAAEC,KAASC,GAAMJ,EAAA,OACzCK,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAL,SAAA,EACIM,EAAAA,EAAAA,KAAA,QAAMC,UCJK,+BDIcP,UACrBM,EAAAA,EAAAA,KAACE,EAAAA,EAAU,CACPP,GAAIA,EACJC,KAAMA,KACFC,EAAKH,UACTM,EAAAA,EAAAA,KAAA,QAAMC,UCVJ,8BDUsBP,SACjBE,EAAO,QAAU,cAIhCI,EAAAA,EAAAA,KAAA,SAAOG,QAASR,EAAGD,SAAEA,MACtB,EAEIU,EAAcC,IAA6C,IAA5C,SAACX,EAAQ,GAAEC,EAAE,QAAEW,EAAO,KAAEV,EAAI,QAAEW,GAAQF,EAC9D,MAAM,EAAGG,IAAmBC,EAAAA,EAAAA,iBACtBC,GAAiBC,EAAAA,EAAAA,cAAYC,IAC/BA,EAAEC,iBACFL,GAAgB,IAAMD,EAAQK,IAAG,GAClC,CAACL,IAEEO,GAAYC,EAAAA,EAAAA,SAClB,OAAOjB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAL,SAAA,EACIM,EAAAA,EAAAA,KAACgB,EAAAA,GAAE,CAACf,UCzBQ,qCDyBiBP,UACzBM,EAAAA,EAAAA,KAACR,EAAO,CAACG,GAAIA,EACJ,gBAAemB,EACflB,KAAMA,EACNW,QAASG,EAAehB,SAC5BY,OAGTN,EAAAA,EAAAA,KAACiB,EAAAA,EAAI,CAACrB,KAAMA,EAAKF,UACbM,EAAAA,EAAAA,KAAA,OAAKL,GAAImB,EAAW,kBAAiBnB,EAAGD,SACnCA,QAGV,EAGd,O","sources":["webpack://words-to-kick-your-teeth-out/./src/features/index/panel-client/index.jsx","webpack://words-to-kick-your-teeth-out/./src/features/index/panel-client/panel.module.css"],"sourcesContent":["import { useId, useTransition, useCallback } from \"react\";\nimport { H2, Pane, PushButton } from \"@features/ui\";\nimport { details, button, insideHeading } from \"./panel.module.css\";\n\nconst Heading = ({children, id, open, ...props}) =>\n      <>\n          <span className={details}>\n              <PushButton\n                  id={id}\n                  open={open}\n                  {...props}>\n                  <span className={button}>\n                        {open ? \"Close\" : \"Open\"}\n                  </span>\n              </PushButton>\n          </span>\n          <label htmlFor={id}>{children}</label>\n      </>;\n\nexport const PanelClient = ({children, id, heading, open, onClick}) => {\n    const [, startTransition] = useTransition();\n    const onClickWrapper = useCallback(e => {\n        e.preventDefault();\n        startTransition(() => onClick(e));\n    }, [onClick]);\n\n    const contentId = useId();\n    return <>\n               <H2 className={insideHeading}>\n                   <Heading id={id}\n                            aria-controls={contentId}\n                            open={open}\n                            onClick={onClickWrapper}>\n                       {heading}\n                   </Heading>\n               </H2>\n               <Pane open={open}>\n                   <nav id={contentId} aria-labelledby={id}>\n                       {children}\n                   </nav>\n               </Pane>\n           </>;\n};\n\nexport default PanelClient;\n","// extracted by mini-css-extract-plugin\nexport var button = \"panel-module--button--515f7\";\nexport var details = \"panel-module--details--83b7e\";\nexport var insideHeading = \"panel-module--insideHeading--3a60c\";"],"names":["Heading","_ref","children","id","open","props","_jsxs","_Fragment","_jsx","className","PushButton","htmlFor","PanelClient","_ref2","heading","onClick","startTransition","useTransition","onClickWrapper","useCallback","e","preventDefault","contentId","useId","H2","Pane"],"sourceRoot":""}